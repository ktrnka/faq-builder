{
  "submission": {
    "id": "1jofeo4",
    "title": "Practical approach to model development",
    "author": "chiqui-bee",
    "selftext": "Has anyone seen good resources describing the practical process of developing machine learning models? Maybe you have your own philosophy?\n\nPlenty of resources describe the math, the models, the techniques, the APIs, and the big steps. Often these resources present the steps in a stylized, linear sequence: define problem, select model class, get data, engineer features, fit model, evaluate.\n\nReality is messier. Every step involves judgement calls. I think some wisdom / guidelines would help us focus on the important things and keep moving forward.",
    "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>Has anyone seen good resources describing the practical process of developing machine learning models? Maybe you have your own philosophy?</p>\n\n<p>Plenty of resources describe the math, the models, the techniques, the APIs, and the big steps. Often these resources present the steps in a stylized, linear sequence: define problem, select model class, get data, engineer features, fit model, evaluate.</p>\n\n<p>Reality is messier. Every step involves judgement calls. I think some wisdom / guidelines would help us focus on the important things and keep moving forward.</p>\n</div><!-- SC_ON -->",
    "url": "https://www.reddit.com/r/MLQuestions/comments/1jofeo4/practical_approach_to_model_development/",
    "permalink": "/r/MLQuestions/comments/1jofeo4/practical_approach_to_model_development/",
    "subreddit": "MLQuestions",
    "created_utc": 1743458291.0,
    "score": 9,
    "ups": 9,
    "downs": 0,
    "upvote_ratio": 1.0,
    "num_comments": 5,
    "is_self": true,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "locked": false,
    "archived": false,
    "distinguished": null,
    "link_flair_text": "Other ❓",
    "timestamp": "2025-03-31T14:58:11"
  },
  "comments": [
    {
      "id": "mkrg9fo",
      "author": "trnka",
      "body": "It's a great question but also an enormously big question! I haven't seen a comprehensive survey across all subareas, but [Hidden Technical Debt in Machine Learning Systems](https://proceedings.neurips.cc/paper_files/paper/2015/file/86df7dcfd896fcaf2674f757a2463eba-Paper.pdf) is a good start though a bit older.\n\nIf you're interested in a particular area of ML let me know - I might have some links in some areas, or I could type up some notes.",
      "body_html": "<div class=\"md\"><p>It&#39;s a great question but also an enormously big question! I haven&#39;t seen a comprehensive survey across all subareas, but <a href=\"https://proceedings.neurips.cc/paper_files/paper/2015/file/86df7dcfd896fcaf2674f757a2463eba-Paper.pdf\">Hidden Technical Debt in Machine Learning Systems</a> is a good start though a bit older.</p>\n\n<p>If you&#39;re interested in a particular area of ML let me know - I might have some links in some areas, or I could type up some notes.</p>\n</div>",
      "created_utc": 1743459483.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1jofeo4/practical_approach_to_model_development/mkrg9fo/",
      "parent_id": "t3_1jofeo4",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-03-31T15:18:03"
    },
    {
      "id": "mkzjbtx",
      "author": "Obvious-Strategy-379",
      "body": "prof. Andrew Ng has a guide",
      "body_html": "<div class=\"md\"><p>prof. Andrew Ng has a guide</p>\n</div>",
      "created_utc": 1743576837.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1jofeo4/practical_approach_to_model_development/mkzjbtx/",
      "parent_id": "t3_1jofeo4",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-01T23:53:57"
    },
    {
      "id": "mmgmb45",
      "author": "chiqui-bee",
      "body": "Great suggestion. I also found this interesting Google ML Guide by Martin Zinkevich that I think references a version of that paper.\n\nhttps://developers.google.com/machine-learning/guides/rules-of-ml",
      "body_html": "<div class=\"md\"><p>Great suggestion. I also found this interesting Google ML Guide by Martin Zinkevich that I think references a version of that paper.</p>\n\n<p><a href=\"https://developers.google.com/machine-learning/guides/rules-of-ml\">https://developers.google.com/machine-learning/guides/rules-of-ml</a></p>\n</div>",
      "created_utc": 1744321188.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1jofeo4/practical_approach_to_model_development/mmgmb45/",
      "parent_id": "t1_mkrg9fo",
      "depth": 1,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-10T14:39:48"
    },
    {
      "id": "mmgmp8u",
      "author": "chiqui-bee",
      "body": "Perhaps this one?\n\nhttps://cs229.stanford.edu/materials/ML-advice.pdf",
      "body_html": "<div class=\"md\"><p>Perhaps this one?</p>\n\n<p><a href=\"https://cs229.stanford.edu/materials/ML-advice.pdf\">https://cs229.stanford.edu/materials/ML-advice.pdf</a></p>\n</div>",
      "created_utc": 1744321312.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1jofeo4/practical_approach_to_model_development/mmgmp8u/",
      "parent_id": "t1_mkzjbtx",
      "depth": 1,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-10T14:41:52"
    },
    {
      "id": "mmgufxq",
      "author": "trnka",
      "body": "Oh that's a really good one! I haven't seen it before. Let me jot down some notes as I skim it, to provide another industry perspective.\n\n> Don’t be afraid to launch a product without machine learning\n\n100% agree. I've seen so much wasted effort from launching ML too soon.\n\n> Rule #2: First, design and implement metrics\n\nI agree, but want to add: Be sure the metrics are ones that people around your company understand and agree with. Brainstorm with people how the metrics might be gamed and try to make them more robust, such as having metrics that balance each other out.\n\n> Rule #8: Know the freshness requirements of your system.\n\nI haven't yet encountered a project with precise freshness requirements. Instead I'd say to deeply understand your users and business so that you're informed enough to make the best freshness tradeoffs you can.\n\n> Rule #9: ... make sure that the model’s performance is reasonable on held out data\n\nI'd add some caveats:\n- I recommend starting with pipelines that require manual approval to deploy models. In that situation, focus on making the manual review quick and effective\n- Anything that changes your evaluation data will change your metrics, and it may even make them look worse. That includes cleaning up your data\n- It's easy to accidentally optimize to your held-out data. If possible, update it occassionally\n\n\n> Rule #10: Watch for silent failures.\n\nI'd add to this: Get familiar with business metrics. If you can talk to users on forums/subreddits/etc, do it. Talk to everyone in your company that talks to users. Make it easy for people to raise quality concerns and make it easy to investigate those concerns.\n\n---\n\nI'll also add to the guide that data quality and data volume are still underappreciated areas. In other words, if you spend a week of work on data quality you'll usually produce more improvements than a week working on the model.\n\nThe most common example is just pure annotation. I had a project this week in which a couple of hours of annotation did much more than a couple of hours on feature engineering, hyperparameter tuning, and model selection.",
      "body_html": "<div class=\"md\"><p>Oh that&#39;s a really good one! I haven&#39;t seen it before. Let me jot down some notes as I skim it, to provide another industry perspective.</p>\n\n<blockquote>\n<p>Don’t be afraid to launch a product without machine learning</p>\n</blockquote>\n\n<p>100% agree. I&#39;ve seen so much wasted effort from launching ML too soon.</p>\n\n<blockquote>\n<p>Rule #2: First, design and implement metrics</p>\n</blockquote>\n\n<p>I agree, but want to add: Be sure the metrics are ones that people around your company understand and agree with. Brainstorm with people how the metrics might be gamed and try to make them more robust, such as having metrics that balance each other out.</p>\n\n<blockquote>\n<p>Rule #8: Know the freshness requirements of your system.</p>\n</blockquote>\n\n<p>I haven&#39;t yet encountered a project with precise freshness requirements. Instead I&#39;d say to deeply understand your users and business so that you&#39;re informed enough to make the best freshness tradeoffs you can.</p>\n\n<blockquote>\n<p>Rule #9: ... make sure that the model’s performance is reasonable on held out data</p>\n</blockquote>\n\n<p>I&#39;d add some caveats:\n- I recommend starting with pipelines that require manual approval to deploy models. In that situation, focus on making the manual review quick and effective\n- Anything that changes your evaluation data will change your metrics, and it may even make them look worse. That includes cleaning up your data\n- It&#39;s easy to accidentally optimize to your held-out data. If possible, update it occassionally</p>\n\n<blockquote>\n<p>Rule #10: Watch for silent failures.</p>\n</blockquote>\n\n<p>I&#39;d add to this: Get familiar with business metrics. If you can talk to users on forums/subreddits/etc, do it. Talk to everyone in your company that talks to users. Make it easy for people to raise quality concerns and make it easy to investigate those concerns.</p>\n\n<hr/>\n\n<p>I&#39;ll also add to the guide that data quality and data volume are still underappreciated areas. In other words, if you spend a week of work on data quality you&#39;ll usually produce more improvements than a week working on the model.</p>\n\n<p>The most common example is just pure annotation. I had a project this week in which a couple of hours of annotation did much more than a couple of hours on feature engineering, hyperparameter tuning, and model selection.</p>\n</div>",
      "created_utc": 1744323851.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1jofeo4/practical_approach_to_model_development/mmgufxq/",
      "parent_id": "t1_mmgmb45",
      "depth": 2,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-10T15:24:11"
    }
  ],
  "total_comments": 5,
  "fetched_at": "2025-09-13T20:47:31.552946"
}