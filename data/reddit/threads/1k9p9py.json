{
  "submission": {
    "id": "1k9p9py",
    "title": "Guidance with Python use in industry",
    "author": "XilentExcision",
    "selftext": "I am about to finish my masters in Data Science, however, before starting my masters I was a full stack senior SWE mainly working on C# and TypeScript stacks.\n\nI am struggling to enjoy ML because of the issues and annoyances I encounter consistently with python. A lot of this can be attributed to the fact that my program does not teach many tools utilized in real production environments like Poetry, etc. Therefore I am looking for advice on how to maintain my projects with a similar amount of diligence.\n\nI love the process involved in building and training models, especially learning the math behind the algorithms; my main goal in pursuing this masters was to be able to build smarter and more intelligent software systems. Over time, I have grown more open to pursuing a data science position, however, I have also started to dislike the python ecosystem. Python is a good language, however, the only true benefit I have experienced is easy syntax (and the ecosystem of libraries). Personally, the cost of \"simple syntax\" is not worth the trade in performance, lack of static typing, extra boilerplate code, better package management, plus more that comes with other languages.\n\nI absolutely understand that an entire industry relies on this infrastructure with tons of open source libraries (I dont expect that to change), is there any hope at all for other languages (statically typed ideally) to gain some popularity as well, enough to be used in production? I am aware of Julia, and [ML.NET](http://ML.NET), however, how often are these genuinely used in production? I would love to contribute to these projects as well.\n\nI am heavily reconsidering applying to any data science positions as I am going to have to use python for the rest of my career. I have already accepted that this is the case, but as a last resort I made this post to ask for advice and guidance. For people with OOP CS background that did pursue a data science or ML engineer position, does it get better in industry? For people that manage \\*\\*large\\*\\* projects built in python, how much effort does it take to ensure that your codebase does not get messy? What tools do you utilize?\n\nI do not make this post as a way to hate on python or its ecosystem, we are all allowed our opinions which are equally valid. I have a clear preference, this post is a last resort as I start applying to positions to see if things do get better in industry.",
    "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>I am about to finish my masters in Data Science, however, before starting my masters I was a full stack senior SWE mainly working on C# and TypeScript stacks.</p>\n\n<p>I am struggling to enjoy ML because of the issues and annoyances I encounter consistently with python. A lot of this can be attributed to the fact that my program does not teach many tools utilized in real production environments like Poetry, etc. Therefore I am looking for advice on how to maintain my projects with a similar amount of diligence.</p>\n\n<p>I love the process involved in building and training models, especially learning the math behind the algorithms; my main goal in pursuing this masters was to be able to build smarter and more intelligent software systems. Over time, I have grown more open to pursuing a data science position, however, I have also started to dislike the python ecosystem. Python is a good language, however, the only true benefit I have experienced is easy syntax (and the ecosystem of libraries). Personally, the cost of &quot;simple syntax&quot; is not worth the trade in performance, lack of static typing, extra boilerplate code, better package management, plus more that comes with other languages.</p>\n\n<p>I absolutely understand that an entire industry relies on this infrastructure with tons of open source libraries (I dont expect that to change), is there any hope at all for other languages (statically typed ideally) to gain some popularity as well, enough to be used in production? I am aware of Julia, and <a href=\"http://ML.NET\">ML.NET</a>, however, how often are these genuinely used in production? I would love to contribute to these projects as well.</p>\n\n<p>I am heavily reconsidering applying to any data science positions as I am going to have to use python for the rest of my career. I have already accepted that this is the case, but as a last resort I made this post to ask for advice and guidance. For people with OOP CS background that did pursue a data science or ML engineer position, does it get better in industry? For people that manage **large** projects built in python, how much effort does it take to ensure that your codebase does not get messy? What tools do you utilize?</p>\n\n<p>I do not make this post as a way to hate on python or its ecosystem, we are all allowed our opinions which are equally valid. I have a clear preference, this post is a last resort as I start applying to positions to see if things do get better in industry.</p>\n</div><!-- SC_ON -->",
    "url": "https://www.reddit.com/r/MLQuestions/comments/1k9p9py/guidance_with_python_use_in_industry/",
    "permalink": "/r/MLQuestions/comments/1k9p9py/guidance_with_python_use_in_industry/",
    "subreddit": "MLQuestions",
    "created_utc": 1745823023.0,
    "score": 9,
    "ups": 9,
    "downs": 0,
    "upvote_ratio": 1.0,
    "num_comments": 6,
    "is_self": true,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "locked": false,
    "archived": false,
    "distinguished": null,
    "link_flair_text": "Beginner question ðŸ‘¶",
    "timestamp": "2025-04-27T23:50:23"
  },
  "comments": [
    {
      "id": "mpg2ozn",
      "author": "DadAndDominant",
      "body": "I work in a smaller company in development section with two teams: application and ML.\n\nFor us from application, the ML code is infamously sloppy, hard to read and hard to work with. That is not a problem with python tho;  we use it in the app part and most of the features you want can be added into the process.\n\nFor package manager, there is uv on the rise of becomimg industry standard. Give it 1 hour and try to build a calculator or something, you'll get your basics pretty quickly. For type checking, using Pydantic/Mypy/Pyright - I think you will be happy enough.\n\nThere are of course parts where Python is not so strong - performance (tip: switch your malloc if you leak a lot), and for me, missing interfaces. \n\nI believe as ML team will mature, they will also start to implement this into their products.",
      "body_html": "<div class=\"md\"><p>I work in a smaller company in development section with two teams: application and ML.</p>\n\n<p>For us from application, the ML code is infamously sloppy, hard to read and hard to work with. That is not a problem with python tho;  we use it in the app part and most of the features you want can be added into the process.</p>\n\n<p>For package manager, there is uv on the rise of becomimg industry standard. Give it 1 hour and try to build a calculator or something, you&#39;ll get your basics pretty quickly. For type checking, using Pydantic/Mypy/Pyright - I think you will be happy enough.</p>\n\n<p>There are of course parts where Python is not so strong - performance (tip: switch your malloc if you leak a lot), and for me, missing interfaces. </p>\n\n<p>I believe as ML team will mature, they will also start to implement this into their products.</p>\n</div>",
      "created_utc": 1745824355.0,
      "score": 3,
      "ups": 3,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1k9p9py/guidance_with_python_use_in_industry/mpg2ozn/",
      "parent_id": "t3_1k9p9py",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-28T00:12:35"
    },
    {
      "id": "mphzipj",
      "author": "trnka",
      "body": "Python code quality really varies from team to team in industry. The better code bases typically had someone advocating for things like testability, readability, learnability, and so on. Sometimes that's a person with a CS background. Other times it's someone that's making a deliberate effort to learn. Other times it's a manager that values these things.\n\nI've experienced a wide range of code quality in industry projects using C, C++, Java, and Rust as well. The worst code bases were more or less equally bad regardless of language. Some are better than others on the topics you mention like performance, typing, and package management. \n\nI haven't heard of many teams using languages other than Python for ML training. I've worked on teams that used other languages for inference. The danger with training in Python and running inference outside of Python is that you might need to re-implement some code, and if you re-implement it incorrectly the bug may go undetected. I haven't seen much growth in non-Python jobs for ML over the last 10 years.\n\n\\> does it get better in industry?\n\nIndustry code quality is significantly higher quality than anything I experienced in grad school. The difference in quality was inconceivable to me at the time. I should probably say that's about the best quality code in academia vs industry settings. Sadly, the worst quality industry code was also inconceivable to me.\n\n\\> how much effort does it take to ensure that your codebase does not get messy? What tools do you utilize?\n\nIt takes constant effort and it's often ignored once there's significant deadline pressure. It takes a strong leader to maintain code quality while also hitting constant deadlines. The tools are largely insignificant compared to  leadership skill.",
      "body_html": "<div class=\"md\"><p>Python code quality really varies from team to team in industry. The better code bases typically had someone advocating for things like testability, readability, learnability, and so on. Sometimes that&#39;s a person with a CS background. Other times it&#39;s someone that&#39;s making a deliberate effort to learn. Other times it&#39;s a manager that values these things.</p>\n\n<p>I&#39;ve experienced a wide range of code quality in industry projects using C, C++, Java, and Rust as well. The worst code bases were more or less equally bad regardless of language. Some are better than others on the topics you mention like performance, typing, and package management. </p>\n\n<p>I haven&#39;t heard of many teams using languages other than Python for ML training. I&#39;ve worked on teams that used other languages for inference. The danger with training in Python and running inference outside of Python is that you might need to re-implement some code, and if you re-implement it incorrectly the bug may go undetected. I haven&#39;t seen much growth in non-Python jobs for ML over the last 10 years.</p>\n\n<p>&gt; does it get better in industry?</p>\n\n<p>Industry code quality is significantly higher quality than anything I experienced in grad school. The difference in quality was inconceivable to me at the time. I should probably say that&#39;s about the best quality code in academia vs industry settings. Sadly, the worst quality industry code was also inconceivable to me.</p>\n\n<p>&gt; how much effort does it take to ensure that your codebase does not get messy? What tools do you utilize?</p>\n\n<p>It takes constant effort and it&#39;s often ignored once there&#39;s significant deadline pressure. It takes a strong leader to maintain code quality while also hitting constant deadlines. The tools are largely insignificant compared to  leadership skill.</p>\n</div>",
      "created_utc": 1745854950.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1k9p9py/guidance_with_python_use_in_industry/mphzipj/",
      "parent_id": "t3_1k9p9py",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-28T08:42:30"
    },
    {
      "id": "mpip0x9",
      "author": "XilentExcision",
      "body": "Thank you for your response! Iâ€™ll look into UV, seems like an awesome tool.",
      "body_html": "<div class=\"md\"><p>Thank you for your response! Iâ€™ll look into UV, seems like an awesome tool.</p>\n</div>",
      "created_utc": 1745862426.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1k9p9py/guidance_with_python_use_in_industry/mpip0x9/",
      "parent_id": "t1_mpg2ozn",
      "depth": 1,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-28T10:47:06"
    },
    {
      "id": "mpis096",
      "author": "XilentExcision",
      "body": "Awesome thank you! You touched on a point that I was really interested in, specifically, how people work around these languages and frameworks. People have a habit of straying from coding guidelines, as projects grow. Itâ€™s easier to manage a team that codes perfectly by the book, but I have yet to come across one. Itâ€™s hard to argue in support of tech debt with no tangible benefit to the business, however, as you mentioned, I think itâ€™s possible to boil this down to a leadership skill issue that can avoided with diligence. \n\nItâ€™s promising to hear that industry does have a lot more stringent regulations around how the codebase is managed. I definitely experienced this with C# as well getting out of my undergrad. However, C# is rarely taught in CS programs, so most of my learning was on the job.",
      "body_html": "<div class=\"md\"><p>Awesome thank you! You touched on a point that I was really interested in, specifically, how people work around these languages and frameworks. People have a habit of straying from coding guidelines, as projects grow. Itâ€™s easier to manage a team that codes perfectly by the book, but I have yet to come across one. Itâ€™s hard to argue in support of tech debt with no tangible benefit to the business, however, as you mentioned, I think itâ€™s possible to boil this down to a leadership skill issue that can avoided with diligence. </p>\n\n<p>Itâ€™s promising to hear that industry does have a lot more stringent regulations around how the codebase is managed. I definitely experienced this with C# as well getting out of my undergrad. However, C# is rarely taught in CS programs, so most of my learning was on the job.</p>\n</div>",
      "created_utc": 1745863283.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1k9p9py/guidance_with_python_use_in_industry/mpis096/",
      "parent_id": "t1_mphzipj",
      "depth": 1,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-28T11:01:23"
    },
    {
      "id": "mpkdin6",
      "author": "trnka",
      "body": "Rather than focusing on following guidelines or doing things \"the right way\", I find it's better to look for teams that learn from their successes and failures. Over time that will lead to higher quality code in an evidence-based way that's aligned with the team.\n\nI wouldn't say that tech debt is avoidable, but it's something to manage like any other kind of cleaning or maintenance. In a good team it's usually under control with occasional surprises.",
      "body_html": "<div class=\"md\"><p>Rather than focusing on following guidelines or doing things &quot;the right way&quot;, I find it&#39;s better to look for teams that learn from their successes and failures. Over time that will lead to higher quality code in an evidence-based way that&#39;s aligned with the team.</p>\n\n<p>I wouldn&#39;t say that tech debt is avoidable, but it&#39;s something to manage like any other kind of cleaning or maintenance. In a good team it&#39;s usually under control with occasional surprises.</p>\n</div>",
      "created_utc": 1745881289.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1k9p9py/guidance_with_python_use_in_industry/mpkdin6/",
      "parent_id": "t1_mpis096",
      "depth": 2,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-28T16:01:29"
    },
    {
      "id": "mpm8cx0",
      "author": "XilentExcision",
      "body": "Awesome, thanks! And I totally agree, Iâ€™m a huge fan of how my old company implemented SCRUM (given they are a top fintech so they have the money) but having a good SCRUM master that ensures that ceremonies are productive, and management to ensure the team doesnâ€™t slide into the scrumfall pit: Iâ€™d kill for that again.",
      "body_html": "<div class=\"md\"><p>Awesome, thanks! And I totally agree, Iâ€™m a huge fan of how my old company implemented SCRUM (given they are a top fintech so they have the money) but having a good SCRUM master that ensures that ceremonies are productive, and management to ensure the team doesnâ€™t slide into the scrumfall pit: Iâ€™d kill for that again.</p>\n</div>",
      "created_utc": 1745907537.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1k9p9py/guidance_with_python_use_in_industry/mpm8cx0/",
      "parent_id": "t1_mpkdin6",
      "depth": 3,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-28T23:18:57"
    }
  ],
  "total_comments": 6,
  "fetched_at": "2025-09-13T20:47:38.448958"
}