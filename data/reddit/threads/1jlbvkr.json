{
  "submission": {
    "id": "1jlbvkr",
    "title": "[deleted by user]",
    "author": null,
    "selftext": "[removed]",
    "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>[removed]</p>\n</div><!-- SC_ON -->",
    "url": "",
    "permalink": "/r/MLQuestions/comments/1jlbvkr/deleted_by_user/",
    "subreddit": "MLQuestions",
    "created_utc": 1743103491.0,
    "score": 2,
    "ups": 2,
    "downs": 0,
    "upvote_ratio": 1.0,
    "num_comments": 2,
    "is_self": true,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "locked": false,
    "archived": false,
    "distinguished": null,
    "link_flair_text": null,
    "timestamp": "2025-03-27T12:24:51"
  },
  "comments": [
    {
      "id": "mk3elk1",
      "author": "trnka",
      "body": "I'm optimistic about ML at the edge. There has been some movement towards edge ML over the last 10 years or so, though I wouldn't call it a major shift. Some examples that come to mind:\n\n* Google's on-device speech recognition and machine translation: This might be more than 10 years old, and it's a great example of making the software better for some users and also saving on server bills\n* Nvidia's DLSS: This is more recent and the biggest deployment is likely to be the upcoming Switch 2\n* Various products for audio/video improvement on conference calls: Another great example that requires low-latency and it might be too expensive on the server\n* On-device voice assistants on phones\n\nIn most of the edge ML applications, it's something that just wouldn't work well if it ran on a server, whether due to cost, latency, or privacy. The exceptions tend to be companies with so many users that it's profitable to shift towards edge computing.\n\nIn startups, when given a choice between edge LM and server ML it's *usually* faster to develop if it's server-based. When it's client-based you have to deal with both slow and fast clients. If it's an iOS or Android app, you lose some control over how often each user updates it. If you need to support multiple clients (web, iOS, Android) that is much more work than developing a single backend.\n\nThat covers your first question I think. On the question of hardware vendors in the cloud, if using GCP you can use either Google TPUs or Nvidia GPUs. In AWS you have the option between their chips and Nvidia. There are some startups working with AMD GPUs but that's fairly recent.\n\nIf you mean edge hardware, that can be a real pain to deal with, because on Android or web there's such a wide range of hardware. On iOS it's more viable.\n\nI hope this helps!",
      "body_html": "<div class=\"md\"><p>I&#39;m optimistic about ML at the edge. There has been some movement towards edge ML over the last 10 years or so, though I wouldn&#39;t call it a major shift. Some examples that come to mind:</p>\n\n<ul>\n<li>Google&#39;s on-device speech recognition and machine translation: This might be more than 10 years old, and it&#39;s a great example of making the software better for some users and also saving on server bills</li>\n<li>Nvidia&#39;s DLSS: This is more recent and the biggest deployment is likely to be the upcoming Switch 2</li>\n<li>Various products for audio/video improvement on conference calls: Another great example that requires low-latency and it might be too expensive on the server</li>\n<li>On-device voice assistants on phones</li>\n</ul>\n\n<p>In most of the edge ML applications, it&#39;s something that just wouldn&#39;t work well if it ran on a server, whether due to cost, latency, or privacy. The exceptions tend to be companies with so many users that it&#39;s profitable to shift towards edge computing.</p>\n\n<p>In startups, when given a choice between edge LM and server ML it&#39;s <em>usually</em> faster to develop if it&#39;s server-based. When it&#39;s client-based you have to deal with both slow and fast clients. If it&#39;s an iOS or Android app, you lose some control over how often each user updates it. If you need to support multiple clients (web, iOS, Android) that is much more work than developing a single backend.</p>\n\n<p>That covers your first question I think. On the question of hardware vendors in the cloud, if using GCP you can use either Google TPUs or Nvidia GPUs. In AWS you have the option between their chips and Nvidia. There are some startups working with AMD GPUs but that&#39;s fairly recent.</p>\n\n<p>If you mean edge hardware, that can be a real pain to deal with, because on Android or web there&#39;s such a wide range of hardware. On iOS it&#39;s more viable.</p>\n\n<p>I hope this helps!</p>\n</div>",
      "created_utc": 1743117739.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1jlbvkr/deleted_by_user/mk3elk1/",
      "parent_id": "t3_1jlbvkr",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-03-27T16:22:19"
    },
    {
      "id": "mk54p0j",
      "author": null,
      "body": "[deleted]",
      "body_html": "<div class=\"md\"><p>[deleted]</p>\n</div>",
      "created_utc": 1743141819.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1jlbvkr/deleted_by_user/mk54p0j/",
      "parent_id": "t1_mk3elk1",
      "depth": 1,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-03-27T23:03:39"
    },
    {
      "id": "mkaoclv",
      "author": "trnka",
      "body": "Ah, I see what you mean.\n\nI'm not really sure if it'd be worthwhile to have a hardware AI accelerator in a cable box... in an embedded situation I'd try to compress, quantize, and prune the model as much as possible rather than use a large model that's compute and memory heavy. But maybe there are some AI/ML applications that I just haven't imagined in some of these devices",
      "body_html": "<div class=\"md\"><p>Ah, I see what you mean.</p>\n\n<p>I&#39;m not really sure if it&#39;d be worthwhile to have a hardware AI accelerator in a cable box... in an embedded situation I&#39;d try to compress, quantize, and prune the model as much as possible rather than use a large model that&#39;s compute and memory heavy. But maybe there are some AI/ML applications that I just haven&#39;t imagined in some of these devices</p>\n</div>",
      "created_utc": 1743215536.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1jlbvkr/deleted_by_user/mkaoclv/",
      "parent_id": "t1_mk54p0j",
      "depth": 2,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-03-28T19:32:16"
    }
  ],
  "total_comments": 3,
  "fetched_at": "2025-09-13T20:47:17.188870"
}