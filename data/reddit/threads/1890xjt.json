{
  "submission": {
    "id": "1890xjt",
    "title": "Profanity filter - what is the recommended approach?",
    "author": "RedditDudeDev",
    "selftext": "I'm a game developer who's been working with a team on an indie game for over 1 year. CabbageBall is a Multiplayer game that mixes magic & sports.\n\nas part of our multiplayer lobby and character selection we want to build a chat functionality and I was wondering if there is a good and simple recommended way to implement the profanity filters, taking into consideration the following:\n\n* blacklist of words to block\n   * different depends on ESRB Ratings?\n* support for multiple languages\n* false positives?\n* other stuff that you think are relevant?\n\nHow did you implement such a system in your game?\n\n\\---\n\nEDITS:\n\nSome valuable feedbacks are more about the why so I will add the following information:\n\nthis will be currently only for our character selection screen as implemented in many other games to enable simple communication for team building\n\nActual in-game will have a quick-chat system that does not require censoring (as it will use predefined messages as in other fast paced games)\n\nAs for the why - Profanity has an impact on the game rating in terms of target audience and legal aspects and additional aspects of accessibility on platforms such as steam, epic, etc.So we do not expect to really block everything, but with a reasonable effort (and perhaps in the future with an option to toggle profanity. although not sure of the impact of this feature)",
    "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m a game developer who&#39;s been working with a team on an indie game for over 1 year. CabbageBall is a Multiplayer game that mixes magic &amp; sports.</p>\n\n<p>as part of our multiplayer lobby and character selection we want to build a chat functionality and I was wondering if there is a good and simple recommended way to implement the profanity filters, taking into consideration the following:</p>\n\n<ul>\n<li>blacklist of words to block\n\n<ul>\n<li>different depends on ESRB Ratings?</li>\n</ul></li>\n<li>support for multiple languages</li>\n<li>false positives?</li>\n<li>other stuff that you think are relevant?</li>\n</ul>\n\n<p>How did you implement such a system in your game?</p>\n\n<p>---</p>\n\n<p>EDITS:</p>\n\n<p>Some valuable feedbacks are more about the why so I will add the following information:</p>\n\n<p>this will be currently only for our character selection screen as implemented in many other games to enable simple communication for team building</p>\n\n<p>Actual in-game will have a quick-chat system that does not require censoring (as it will use predefined messages as in other fast paced games)</p>\n\n<p>As for the why - Profanity has an impact on the game rating in terms of target audience and legal aspects and additional aspects of accessibility on platforms such as steam, epic, etc.So we do not expect to really block everything, but with a reasonable effort (and perhaps in the future with an option to toggle profanity. although not sure of the impact of this feature)</p>\n</div><!-- SC_ON -->",
    "url": "https://www.reddit.com/r/gamedev/comments/1890xjt/profanity_filter_what_is_the_recommended_approach/",
    "permalink": "/r/gamedev/comments/1890xjt/profanity_filter_what_is_the_recommended_approach/",
    "subreddit": "gamedev",
    "created_utc": 1701512886.0,
    "score": 2,
    "ups": 2,
    "downs": 0,
    "upvote_ratio": 0.56,
    "num_comments": 15,
    "is_self": true,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "locked": false,
    "archived": false,
    "distinguished": null,
    "link_flair_text": "Question",
    "timestamp": "2023-12-02T02:28:06"
  },
  "comments": [
    {
      "id": "kbod8uh",
      "author": null,
      "body": "https://www.reddit.com/r/totalwar/comments/zly9b3/my_name_is_nasser_the_game_is_censoring_the_word/\n\nWelcome to a universe of edge cases.\n\nPersonally I'd just blacklist the n word and call it a day.",
      "body_html": "<div class=\"md\"><p><a href=\"https://www.reddit.com/r/totalwar/comments/zly9b3/my_name_is_nasser_the_game_is_censoring_the_word/\">https://www.reddit.com/r/totalwar/comments/zly9b3/my_name_is_nasser_the_game_is_censoring_the_word/</a></p>\n\n<p>Welcome to a universe of edge cases.</p>\n\n<p>Personally I&#39;d just blacklist the n word and call it a day.</p>\n</div>",
      "created_utc": 1701521572.0,
      "score": 28,
      "ups": 28,
      "downs": 0,
      "permalink": "/r/gamedev/comments/1890xjt/profanity_filter_what_is_the_recommended_approach/kbod8uh/",
      "parent_id": "t3_1890xjt",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2023-12-02T04:52:52"
    },
    {
      "id": "kbojvzi",
      "author": "PhilippTheProgrammer",
      "body": "Profanity filters are a fig-leaf you add so you can tell people you are doing something to prevent toxicity in the game without actually doing anything.",
      "body_html": "<div class=\"md\"><p>Profanity filters are a fig-leaf you add so you can tell people you are doing something to prevent toxicity in the game without actually doing anything.</p>\n</div>",
      "created_utc": 1701525438.0,
      "score": 16,
      "ups": 16,
      "downs": 0,
      "permalink": "/r/gamedev/comments/1890xjt/profanity_filter_what_is_the_recommended_approach/kbojvzi/",
      "parent_id": "t3_1890xjt",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2023-12-02T05:57:18"
    },
    {
      "id": "kbokdlf",
      "author": "Disastrous-Lemon7456",
      "body": "That's the most annoying thing devs do for multiplayer, just don't do it as bad as the DS one with \"k***ht\"",
      "body_html": "<div class=\"md\"><p>That&#39;s the most annoying thing devs do for multiplayer, just don&#39;t do it as bad as the DS one with &quot;k***ht&quot;</p>\n</div>",
      "created_utc": 1701525705.0,
      "score": 8,
      "ups": 8,
      "downs": 0,
      "permalink": "/r/gamedev/comments/1890xjt/profanity_filter_what_is_the_recommended_approach/kbokdlf/",
      "parent_id": "t3_1890xjt",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2023-12-02T06:01:45"
    },
    {
      "id": "kbo61pd",
      "author": "norlin",
      "body": "Why would you want to do such an annoying thing? It's both can't be solved from technical side and will make people annoyed",
      "body_html": "<div class=\"md\"><p>Why would you want to do such an annoying thing? It&#39;s both can&#39;t be solved from technical side and will make people annoyed</p>\n</div>",
      "created_utc": 1701516373.0,
      "score": 15,
      "ups": 15,
      "downs": 0,
      "permalink": "/r/gamedev/comments/1890xjt/profanity_filter_what_is_the_recommended_approach/kbo61pd/",
      "parent_id": "t3_1890xjt",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2023-12-02T03:26:13"
    },
    {
      "id": "kbo99kk",
      "author": "snerp",
      "body": "Just don't. If you really must not let people swear under any circumstance, limit it to quick-chat always.",
      "body_html": "<div class=\"md\"><p>Just don&#39;t. If you really must not let people swear under any circumstance, limit it to quick-chat always.</p>\n</div>",
      "created_utc": 1701518853.0,
      "score": 8,
      "ups": 8,
      "downs": 0,
      "permalink": "/r/gamedev/comments/1890xjt/profanity_filter_what_is_the_recommended_approach/kbo99kk/",
      "parent_id": "t3_1890xjt",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2023-12-02T04:07:33"
    },
    {
      "id": "kbqi0gt",
      "author": "madamutzsar",
      "body": "If a profanity filter must be in place, I like when they replace the profanity with some silly nonsense. Like \"bobba\" in Habbo Hotel. Then if it messes up and censors something it shouldn't, at least it's funny",
      "body_html": "<div class=\"md\"><p>If a profanity filter must be in place, I like when they replace the profanity with some silly nonsense. Like &quot;bobba&quot; in Habbo Hotel. Then if it messes up and censors something it shouldn&#39;t, at least it&#39;s funny</p>\n</div>",
      "created_utc": 1701554907.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/gamedev/comments/1890xjt/profanity_filter_what_is_the_recommended_approach/kbqi0gt/",
      "parent_id": "t3_1890xjt",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2023-12-02T14:08:27"
    },
    {
      "id": "kbtg8sz",
      "author": "trnka",
      "body": "If you don't have much time but have the budget, I'd recommend using a vendor for this. I think I've even seen vendors that offer a combination package of automated filtering and human moderation.\n\nIf you don't have much time and also don't have much budget, I'd just build a regex from word lists, limit it to word boundaries only, and try to keep the list of banned words very short to minimize mistakes.\n\nIf you have more time, I'd suggest setting up a CI pipeline to automatically test the filter against some data, which you can update once the game is live. It could be as simple as diffing what's filtered between two different versions and manually reviewing, or as complex as having your data labeled and calculating formal metrics such as precision and recall.\n\nAs others have said, it takes a lot of effort to get it right. Some things to keep in mind:\n\n* Preventing a player from registering a username based on substrings is very different than bleeping chats.\n* Multilingual support is hard, especially if you don't know what language each player is typing\n* If the team doesn't speak all the languages, it takes much more effort to ensure high quality across languages\n* If you do a single filter across languages, there are words that are profane in one language but polite in others\n* If successful, players will chat in more languages than you formally support\n* Human moderation and automated filtering are two pieces of the same overall system, and imo it's better to think about them together and consider which problems you prefer to solve with people vs automation\n* Double-check that the terminology of your game (places, items, etc) isn't filtered.\n* Depending on the platforms you're targeting, some of them have their own specific requirements around profanity filtering",
      "body_html": "<div class=\"md\"><p>If you don&#39;t have much time but have the budget, I&#39;d recommend using a vendor for this. I think I&#39;ve even seen vendors that offer a combination package of automated filtering and human moderation.</p>\n\n<p>If you don&#39;t have much time and also don&#39;t have much budget, I&#39;d just build a regex from word lists, limit it to word boundaries only, and try to keep the list of banned words very short to minimize mistakes.</p>\n\n<p>If you have more time, I&#39;d suggest setting up a CI pipeline to automatically test the filter against some data, which you can update once the game is live. It could be as simple as diffing what&#39;s filtered between two different versions and manually reviewing, or as complex as having your data labeled and calculating formal metrics such as precision and recall.</p>\n\n<p>As others have said, it takes a lot of effort to get it right. Some things to keep in mind:</p>\n\n<ul>\n<li>Preventing a player from registering a username based on substrings is very different than bleeping chats.</li>\n<li>Multilingual support is hard, especially if you don&#39;t know what language each player is typing</li>\n<li>If the team doesn&#39;t speak all the languages, it takes much more effort to ensure high quality across languages</li>\n<li>If you do a single filter across languages, there are words that are profane in one language but polite in others</li>\n<li>If successful, players will chat in more languages than you formally support</li>\n<li>Human moderation and automated filtering are two pieces of the same overall system, and imo it&#39;s better to think about them together and consider which problems you prefer to solve with people vs automation</li>\n<li>Double-check that the terminology of your game (places, items, etc) isn&#39;t filtered.</li>\n<li>Depending on the platforms you&#39;re targeting, some of them have their own specific requirements around profanity filtering</li>\n</ul>\n</div>",
      "created_utc": 1701614654.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/gamedev/comments/1890xjt/profanity_filter_what_is_the_recommended_approach/kbtg8sz/",
      "parent_id": "t3_1890xjt",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2023-12-03T06:44:14"
    },
    {
      "id": "kbok6gq",
      "author": "MeaningfulChoices",
      "body": "Yes, filters are important, and required to implement depending on what platform you're targeting. The hardest parts technically are not blocking words you shouldn't (the grape problem) but at the end of the day that's just regular expressions. You can get some free lists of plenty of words online and just add more as players report issues. \n\nIn most games with emotes the only place this is an issue is in character names, since usually players can't talk to each other directly. Best practice there is to flag the player's name _without informing them_ and just replace their name with the same generated logic you'd use for default names before players customize their own. This avoids people trying to arms race your filter as well as avoids people complaining about false positives (since they'll never know they had their name swapped). \n\nI'm not sure I would implement chat just for a character selection flow, that's a lot of work and overhead since you have to add things like mutes and text-to-speech if you want to be fully CVAA compliant. If you were insistent you'd probably want to be a little over-zealous and include an option to toggle on/off the filter from the start, not something you'd add later. In some ways the goal of that is to get people to opt out so they can't really complain if something is missed.",
      "body_html": "<div class=\"md\"><p>Yes, filters are important, and required to implement depending on what platform you&#39;re targeting. The hardest parts technically are not blocking words you shouldn&#39;t (the grape problem) but at the end of the day that&#39;s just regular expressions. You can get some free lists of plenty of words online and just add more as players report issues. </p>\n\n<p>In most games with emotes the only place this is an issue is in character names, since usually players can&#39;t talk to each other directly. Best practice there is to flag the player&#39;s name <em>without informing them</em> and just replace their name with the same generated logic you&#39;d use for default names before players customize their own. This avoids people trying to arms race your filter as well as avoids people complaining about false positives (since they&#39;ll never know they had their name swapped). </p>\n\n<p>I&#39;m not sure I would implement chat just for a character selection flow, that&#39;s a lot of work and overhead since you have to add things like mutes and text-to-speech if you want to be fully CVAA compliant. If you were insistent you&#39;d probably want to be a little over-zealous and include an option to toggle on/off the filter from the start, not something you&#39;d add later. In some ways the goal of that is to get people to opt out so they can&#39;t really complain if something is missed.</p>\n</div>",
      "created_utc": 1701525598.0,
      "score": 5,
      "ups": 5,
      "downs": 0,
      "permalink": "/r/gamedev/comments/1890xjt/profanity_filter_what_is_the_recommended_approach/kbok6gq/",
      "parent_id": "t3_1890xjt",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2023-12-02T05:59:58"
    },
    {
      "id": "kbpqjco",
      "author": null,
      "body": "I haven't had the time to test this out myself, but I'm in the middle of building my own multiplayer game (Online turn based, grand strategy),\n\nand I was curious about how effective ChatGPT would be as an auto moderator/content moderator\n\nI ran some basic tests and it performed very well.\n\nHere's what I came back with:\n\nChatGPT - The Game Chat Moderator\n\n\\*\\*Rules:\\*\\*Rates message content on a scale from 1-3. 1 = inappropriate, 2 = questionable, 3 = innocentChatGPT only runs when a message or piece of user generated content is reported, with controls in place to prevent abuse. (Will describe in the cons section)After rating the content,  based on the scale rating issue the appropriate punishment.Warning, Temporary Mute, Suspension, Recommend Permanent Ban (Human Reviews this)\n\n\\*\\*Pros:\\*\\*Allows for instantaneous moderation to deal with troublesome users.Can be trained to adapt to new work around troublesome users find to get by chat filters. (variations of the n word for example)\n\n\\*\\*Cons:\\*\\*CostPotentially subject to malicious abuse, so you will have to limit the rate at which you call ChatGPT's API to prevent rogue users from attempting to bankrupt you.\n\nModel needs to be trained responsibly and securely, if you allow any user to provide input on the model, technically sophisticated users could 'poison' it so that it begins to flag and punish innocent users.\n\n&#x200B;\n\n**Solutions to presented Cons**:  \nDeploy the API at either random or fixed intervals with a limit of calls made per day to prevent sabotage of your finances, additionally regular scheduled reviews should help keep the campground clean.\n\nAlternatively, assign users reports' scores for accuracy, in times of high use only allow users with high trust scores you call the API if they begin to abuse it maliciously slowly lower their trust score.\n\nRegarding Model Behavoir, you'll likely have to avoid incorporating player feedback into the model in any unsupervised capacity. Most likely you'll want to occasionally review ChatGPT's judgements and signal to it when it's made a mistake or when it's not capturing toxic content.\n\nOverall, while this probably isn't a good idea for your game in certain environments I believe ChatGPT would serve as useful aid assuming appropriate precautions are taken.  \n\n\n(if your curious about specific costs, its .002$ per token, lets assume a report  on average contains 20 tokens, that takes us to .04 cents per report, not too bad, unless volume is rather high, and even then you could always limit total tokens processed a day)",
      "body_html": "<div class=\"md\"><p>I haven&#39;t had the time to test this out myself, but I&#39;m in the middle of building my own multiplayer game (Online turn based, grand strategy),</p>\n\n<p>and I was curious about how effective ChatGPT would be as an auto moderator/content moderator</p>\n\n<p>I ran some basic tests and it performed very well.</p>\n\n<p>Here&#39;s what I came back with:</p>\n\n<p>ChatGPT - The Game Chat Moderator</p>\n\n<p>**Rules:**Rates message content on a scale from 1-3. 1 = inappropriate, 2 = questionable, 3 = innocentChatGPT only runs when a message or piece of user generated content is reported, with controls in place to prevent abuse. (Will describe in the cons section)After rating the content,  based on the scale rating issue the appropriate punishment.Warning, Temporary Mute, Suspension, Recommend Permanent Ban (Human Reviews this)</p>\n\n<p>**Pros:**Allows for instantaneous moderation to deal with troublesome users.Can be trained to adapt to new work around troublesome users find to get by chat filters. (variations of the n word for example)</p>\n\n<p>**Cons:**CostPotentially subject to malicious abuse, so you will have to limit the rate at which you call ChatGPT&#39;s API to prevent rogue users from attempting to bankrupt you.</p>\n\n<p>Model needs to be trained responsibly and securely, if you allow any user to provide input on the model, technically sophisticated users could &#39;poison&#39; it so that it begins to flag and punish innocent users.</p>\n\n<p>&#x200B;</p>\n\n<p><strong>Solutions to presented Cons</strong>:<br/>\nDeploy the API at either random or fixed intervals with a limit of calls made per day to prevent sabotage of your finances, additionally regular scheduled reviews should help keep the campground clean.</p>\n\n<p>Alternatively, assign users reports&#39; scores for accuracy, in times of high use only allow users with high trust scores you call the API if they begin to abuse it maliciously slowly lower their trust score.</p>\n\n<p>Regarding Model Behavoir, you&#39;ll likely have to avoid incorporating player feedback into the model in any unsupervised capacity. Most likely you&#39;ll want to occasionally review ChatGPT&#39;s judgements and signal to it when it&#39;s made a mistake or when it&#39;s not capturing toxic content.</p>\n\n<p>Overall, while this probably isn&#39;t a good idea for your game in certain environments I believe ChatGPT would serve as useful aid assuming appropriate precautions are taken.  </p>\n\n<p>(if your curious about specific costs, its .002$ per token, lets assume a report  on average contains 20 tokens, that takes us to .04 cents per report, not too bad, unless volume is rather high, and even then you could always limit total tokens processed a day)</p>\n</div>",
      "created_utc": 1701543790.0,
      "score": -7,
      "ups": -7,
      "downs": 0,
      "permalink": "/r/gamedev/comments/1890xjt/profanity_filter_what_is_the_recommended_approach/kbpqjco/",
      "parent_id": "t3_1890xjt",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": true,
      "distinguished": null,
      "timestamp": "2023-12-02T11:03:10"
    },
    {
      "id": "kcmcsnu",
      "author": "RedditDudeDev",
      "body": "I Appreciate all the feedback guys!\n\nI hope it will help others in their decision making as well",
      "body_html": "<div class=\"md\"><p>I Appreciate all the feedback guys!</p>\n\n<p>I hope it will help others in their decision making as well</p>\n</div>",
      "created_utc": 1702120910.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/gamedev/comments/1890xjt/profanity_filter_what_is_the_recommended_approach/kcmcsnu/",
      "parent_id": "t3_1890xjt",
      "depth": 0,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2023-12-09T03:21:50"
    },
    {
      "id": "kbpkh0t",
      "author": null,
      "body": "Normally not a fan of censoring user names due to stupid false positives.  I really like your idea to silently replace bad names.",
      "body_html": "<div class=\"md\"><p>Normally not a fan of censoring user names due to stupid false positives.  I really like your idea to silently replace bad names.</p>\n</div>",
      "created_utc": 1701541332.0,
      "score": 3,
      "ups": 3,
      "downs": 0,
      "permalink": "/r/gamedev/comments/1890xjt/profanity_filter_what_is_the_recommended_approach/kbpkh0t/",
      "parent_id": "t1_kbok6gq",
      "depth": 1,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2023-12-02T10:22:12"
    }
  ],
  "total_comments": 11,
  "fetched_at": "2025-09-13T20:47:17.417453"
}