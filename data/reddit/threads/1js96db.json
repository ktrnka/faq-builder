{
  "submission": {
    "id": "1js96db",
    "title": "How to train a multi-view attention model to combine NGram and BioBERT embeddings",
    "author": "Connect-Courage6458",
    "selftext": "Hello everyone i hope you're doing well so I'm working on building a multi-view model that uses an attention mechanism to combine two types of features: NGram embeddings and BioBERT embeddings\n\nThe goal is to create a richer representation by aligning and combining these different views using attention. However, I'm not sure how to structure the training process so that the attention mechanism learns to meaningfully align the features from each view. I mean, I can't just train it on the labels directly, because that would be like training a regular MLP on a classification task\nHas anyone worked on something similar or can point me in the right direction?\n\nI havenâ€™t tried anything concrete yet because Iâ€™m still confused about how to approach training this kind of attention-based multi-view model. Iâ€™m unsure what the objective should be and how to make it learn meaningful attention weights.",
    "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>Hello everyone i hope you&#39;re doing well so I&#39;m working on building a multi-view model that uses an attention mechanism to combine two types of features: NGram embeddings and BioBERT embeddings</p>\n\n<p>The goal is to create a richer representation by aligning and combining these different views using attention. However, I&#39;m not sure how to structure the training process so that the attention mechanism learns to meaningfully align the features from each view. I mean, I can&#39;t just train it on the labels directly, because that would be like training a regular MLP on a classification task\nHas anyone worked on something similar or can point me in the right direction?</p>\n\n<p>I havenâ€™t tried anything concrete yet because Iâ€™m still confused about how to approach training this kind of attention-based multi-view model. Iâ€™m unsure what the objective should be and how to make it learn meaningful attention weights.</p>\n</div><!-- SC_ON -->",
    "url": "https://www.reddit.com/r/MLQuestions/comments/1js96db/how_to_train_a_multiview_attention_model_to/",
    "permalink": "/r/MLQuestions/comments/1js96db/how_to_train_a_multiview_attention_model_to/",
    "subreddit": "MLQuestions",
    "created_utc": 1743875363.0,
    "score": 6,
    "ups": 6,
    "downs": 0,
    "upvote_ratio": 1.0,
    "num_comments": 6,
    "is_self": true,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "locked": false,
    "archived": false,
    "distinguished": null,
    "link_flair_text": "Beginner question ðŸ‘¶",
    "timestamp": "2025-04-05T10:49:23"
  },
  "comments": [
    {
      "id": "mllo25u",
      "author": "trnka",
      "body": "I did something like this a few years ago with good results, but didn't use attention and didn't try to align the features. This was for multilabel classification in the medical space in about 2017 maybe. \n\nOne text encoder was a convolutional NN using pretrained word embeddings. We tuned the width and found around 2 was ideal. We also found wider was better than deeper for our data.\n\nThe other text encoder was a plain old bag of tf-idf words, though we had to project it down to a lower dimensional space to make training run reasonably fast. The output of those two encoders was concatenated and fed into some FC layers and a sigmoid classification layer. It was vastly better than either encoder alone, at all training data sizes. Another subtle benefit of the approach was that the two encoders could use different tokenizers which helped to minimize weird edge cases.\n\nThe objective function was just regular multilabel binary cross entropy. The only weird part with that is that not all of our labels were annotated on every row, so we had to mask the loss function to the data that we had annotated.\n\nYou could try something similar and have one side of your network based on ngram embeddings and the other side based on BioBERT.",
      "body_html": "<div class=\"md\"><p>I did something like this a few years ago with good results, but didn&#39;t use attention and didn&#39;t try to align the features. This was for multilabel classification in the medical space in about 2017 maybe. </p>\n\n<p>One text encoder was a convolutional NN using pretrained word embeddings. We tuned the width and found around 2 was ideal. We also found wider was better than deeper for our data.</p>\n\n<p>The other text encoder was a plain old bag of tf-idf words, though we had to project it down to a lower dimensional space to make training run reasonably fast. The output of those two encoders was concatenated and fed into some FC layers and a sigmoid classification layer. It was vastly better than either encoder alone, at all training data sizes. Another subtle benefit of the approach was that the two encoders could use different tokenizers which helped to minimize weird edge cases.</p>\n\n<p>The objective function was just regular multilabel binary cross entropy. The only weird part with that is that not all of our labels were annotated on every row, so we had to mask the loss function to the data that we had annotated.</p>\n\n<p>You could try something similar and have one side of your network based on ngram embeddings and the other side based on BioBERT.</p>\n</div>",
      "created_utc": 1743888103.0,
      "score": 3,
      "ups": 3,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1js96db/how_to_train_a_multiview_attention_model_to/mllo25u/",
      "parent_id": "t3_1js96db",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-05T14:21:43"
    },
    {
      "id": "mllsyw1",
      "author": "Connect-Courage6458",
      "body": "sorry if this sounds like a basic question, but I really want to understand this better â€” when you say the outputs of both encoders were concatenated and fed into some FC layers and a sigmoid classification layerâ€¦ How exactly did you train the FC layers to generate useful embeddings? if you used the labels doesnt that makes the fc work as classifier ?",
      "body_html": "<div class=\"md\"><p>sorry if this sounds like a basic question, but I really want to understand this better â€” when you say the outputs of both encoders were concatenated and fed into some FC layers and a sigmoid classification layerâ€¦ How exactly did you train the FC layers to generate useful embeddings? if you used the labels doesnt that makes the fc work as classifier ?</p>\n</div>",
      "created_utc": 1743889851.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1js96db/how_to_train_a_multiview_attention_model_to/mllsyw1/",
      "parent_id": "t1_mllo25u",
      "depth": 1,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-05T14:50:51"
    },
    {
      "id": "mlm9ssn",
      "author": "trnka",
      "body": "Yep it was a classifier.\n\nI might not have understood your post: You mention that you don't want to train a classifier, but why not? Do you have something else that you can measure and train against?",
      "body_html": "<div class=\"md\"><p>Yep it was a classifier.</p>\n\n<p>I might not have understood your post: You mention that you don&#39;t want to train a classifier, but why not? Do you have something else that you can measure and train against?</p>\n</div>",
      "created_utc": 1743896074.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1js96db/how_to_train_a_multiview_attention_model_to/mlm9ssn/",
      "parent_id": "t1_mllsyw1",
      "depth": 2,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-05T16:34:34"
    },
    {
      "id": "mlmnscu",
      "author": "Connect-Courage6458",
      "body": "I want to improve my embeddings before sending them to the classifier (whcih can be anything BiLSTM, RNN, etc.)\n\nI've read about the benefits of using attention mechanisms to capture important features, and I want to use this approach to combine NGram and BioBERT embeddings.\n\nmy goal is to use attention-based fusion, where attention dynamically weighs and merges features instead of just concatenating them. However, I'm not sure how to train the attention mechanism to do this ....",
      "body_html": "<div class=\"md\"><p>I want to improve my embeddings before sending them to the classifier (whcih can be anything BiLSTM, RNN, etc.)</p>\n\n<p>I&#39;ve read about the benefits of using attention mechanisms to capture important features, and I want to use this approach to combine NGram and BioBERT embeddings.</p>\n\n<p>my goal is to use attention-based fusion, where attention dynamically weighs and merges features instead of just concatenating them. However, I&#39;m not sure how to train the attention mechanism to do this ....</p>\n</div>",
      "created_utc": 1743901445.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1js96db/how_to_train_a_multiview_attention_model_to/mlmnscu/",
      "parent_id": "t1_mlm9ssn",
      "depth": 3,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-05T18:04:05"
    },
    {
      "id": "mlmv393",
      "author": "trnka",
      "body": "In my experience, the time where it's worthwhile to pretrain embeddings is when the labeled dataset is small and I have plenty of unlabeled data. If you're in that situation, it may help to pretrain your ngram embeddings. That said, what I had this situation I found it was better to take pretrained word2vec/fasttext/etc embeddings rather than training embeddings on my unlabeled data. I simply didn't have nearly enough medical text data of the right type to make it worthwhile.\n\nYou could also fine-tune BioBERT in an unsupervised way if you'd like but it was already trained on a large dataset so it probably won't help. I'd just let it fine-tune when you train your classifier.\n\nIt's a good thing to have your embedding weights adjust as you're training your classifier.\n\nI'm not familiar with attention-based fusion so I don't have any useful advice there.",
      "body_html": "<div class=\"md\"><p>In my experience, the time where it&#39;s worthwhile to pretrain embeddings is when the labeled dataset is small and I have plenty of unlabeled data. If you&#39;re in that situation, it may help to pretrain your ngram embeddings. That said, what I had this situation I found it was better to take pretrained word2vec/fasttext/etc embeddings rather than training embeddings on my unlabeled data. I simply didn&#39;t have nearly enough medical text data of the right type to make it worthwhile.</p>\n\n<p>You could also fine-tune BioBERT in an unsupervised way if you&#39;d like but it was already trained on a large dataset so it probably won&#39;t help. I&#39;d just let it fine-tune when you train your classifier.</p>\n\n<p>It&#39;s a good thing to have your embedding weights adjust as you&#39;re training your classifier.</p>\n\n<p>I&#39;m not familiar with attention-based fusion so I don&#39;t have any useful advice there.</p>\n</div>",
      "created_utc": 1743904382.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1js96db/how_to_train_a_multiview_attention_model_to/mlmv393/",
      "parent_id": "t1_mlmnscu",
      "depth": 4,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-05T18:53:02"
    },
    {
      "id": "mlodosk",
      "author": "Connect-Courage6458",
      "body": "Ok I see thank you",
      "body_html": "<div class=\"md\"><p>Ok I see thank you</p>\n</div>",
      "created_utc": 1743933127.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1js96db/how_to_train_a_multiview_attention_model_to/mlodosk/",
      "parent_id": "t1_mlmv393",
      "depth": 5,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-04-06T02:52:07"
    }
  ],
  "total_comments": 6,
  "fetched_at": "2025-09-13T20:47:13.047053"
}