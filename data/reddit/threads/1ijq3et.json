{
  "submission": {
    "id": "1ijq3et",
    "title": "TIL: Fixing Team Dynamics Can Cut AWS Costs More Than Instance Optimization",
    "author": "napcae",
    "selftext": "Hey r/aws (and anyone drowning in cloud bills!) \n\nLong-time lurker here, I've seen a lot of startups struggle with cloud costs. \n\nThe usual advice is \"rightsize your instances,\" \"optimize your storage,\" which is all valid. \nBut I've found the biggest savings often come from addressing something less tangible: team dynamics. \n\n\"Ok what is he talking about?\" \n\nA while back, I worked with a SaaS startup growing fast. They were bleeding cash on AWS(surprise eh) and everyone assumed it was just inefficient coding or poorly configured databases. \n\nTurns out, the real issue was this:\n\n* Engineers were afraid to delete unused resources because they weren't sure who owned them or if they'd break something.\n* Deployments were so slow (25 minutes!) that nobody wanted to make small, incremental changes. They'd batch up huge releases, which made debugging a nightmare and discouraged experimentation.\n* No one felt truly responsible for cost optimization, so it fell through the cracks.\n\nSo, what did we do? Yes, we optimized instances and storage. But more importantly, we:\n\n1. Implemented clear ownership: Every resource had a designated owner and a documented lifecycle. No more orphaned EC2 instances.\n2. Automated the shit out of deployments: Cut deployment times to under 10 minutes. Smaller, more frequent deployments meant less risk and faster feedback loops.\n3. Fostered a â€œcost-conscious\" culture: We started tracking cloud costs as a team, celebrating cost-saving initiatives in slack, and encouraging everyone to think about efficiency.\n\nThe result? \n\nThey slashed their cloud bill by 40% in a matter of weeks. The technical optimizations were important, but the cultural shift was what really moved the needle. \n\nFood for thought: Are your cloud costs primarily a technical problem or a team/process problem? I'm curious to hear your experiences!",
    "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>Hey <a href=\"/r/aws\">r/aws</a> (and anyone drowning in cloud bills!) </p>\n\n<p>Long-time lurker here, I&#39;ve seen a lot of startups struggle with cloud costs. </p>\n\n<p>The usual advice is &quot;rightsize your instances,&quot; &quot;optimize your storage,&quot; which is all valid. \nBut I&#39;ve found the biggest savings often come from addressing something less tangible: team dynamics. </p>\n\n<p>&quot;Ok what is he talking about?&quot; </p>\n\n<p>A while back, I worked with a SaaS startup growing fast. They were bleeding cash on AWS(surprise eh) and everyone assumed it was just inefficient coding or poorly configured databases. </p>\n\n<p>Turns out, the real issue was this:</p>\n\n<ul>\n<li>Engineers were afraid to delete unused resources because they weren&#39;t sure who owned them or if they&#39;d break something.</li>\n<li>Deployments were so slow (25 minutes!) that nobody wanted to make small, incremental changes. They&#39;d batch up huge releases, which made debugging a nightmare and discouraged experimentation.</li>\n<li>No one felt truly responsible for cost optimization, so it fell through the cracks.</li>\n</ul>\n\n<p>So, what did we do? Yes, we optimized instances and storage. But more importantly, we:</p>\n\n<ol>\n<li>Implemented clear ownership: Every resource had a designated owner and a documented lifecycle. No more orphaned EC2 instances.</li>\n<li>Automated the shit out of deployments: Cut deployment times to under 10 minutes. Smaller, more frequent deployments meant less risk and faster feedback loops.</li>\n<li>Fostered a â€œcost-conscious&quot; culture: We started tracking cloud costs as a team, celebrating cost-saving initiatives in slack, and encouraging everyone to think about efficiency.</li>\n</ol>\n\n<p>The result? </p>\n\n<p>They slashed their cloud bill by 40% in a matter of weeks. The technical optimizations were important, but the cultural shift was what really moved the needle. </p>\n\n<p>Food for thought: Are your cloud costs primarily a technical problem or a team/process problem? I&#39;m curious to hear your experiences!</p>\n</div><!-- SC_ON -->",
    "url": "https://www.reddit.com/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/",
    "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/",
    "subreddit": "aws",
    "created_utc": 1738915649.0,
    "score": 307,
    "ups": 307,
    "downs": 0,
    "upvote_ratio": 0.98,
    "num_comments": 24,
    "is_self": true,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "locked": false,
    "archived": false,
    "distinguished": null,
    "link_flair_text": "discussion",
    "timestamp": "2025-02-07T00:07:29"
  },
  "comments": [
    {
      "id": "mbg5iul",
      "author": "OneCheesyDutchman",
      "body": "Donâ€™t have much to add beyond a wholehearted upvote. Experienced the same thing on a code instead of infra level. The original lead dev had left the team, and nobody really dared to make changes out of fear of breaking stuff. One concrete example: we had a custom URL parser, built in the days before PHPâ€™s built-in parsing was â€˜adequateâ€™ (according to the comment, whatever that might have meant). Problem was that it had both bugs and quirks where it deviated from what we now consider normal. Trying to replace it with the one-liner replacement would break the unit tests (fair enough), but nobody could decide that the cases covered by the tests were actually ever expected by the application and wouldnâ€™t break the world. So everyone just left it. Fed up, I added the one-liner and compared the outputs, logging any differences. Only one time it triggered, during an attack that tried malformed inputs ðŸ¥¹. That ran in production for half a year (stuff got in between), until somebody asked me why on earth we werenâ€™t just returning the result from the one-liner, not understanding why I was logging the difference. But he didnâ€™t dare remove the old stuff, and  I had become part of the problem ðŸ˜…",
      "body_html": "<div class=\"md\"><p>Donâ€™t have much to add beyond a wholehearted upvote. Experienced the same thing on a code instead of infra level. The original lead dev had left the team, and nobody really dared to make changes out of fear of breaking stuff. One concrete example: we had a custom URL parser, built in the days before PHPâ€™s built-in parsing was â€˜adequateâ€™ (according to the comment, whatever that might have meant). Problem was that it had both bugs and quirks where it deviated from what we now consider normal. Trying to replace it with the one-liner replacement would break the unit tests (fair enough), but nobody could decide that the cases covered by the tests were actually ever expected by the application and wouldnâ€™t break the world. So everyone just left it. Fed up, I added the one-liner and compared the outputs, logging any differences. Only one time it triggered, during an attack that tried malformed inputs ðŸ¥¹. That ran in production for half a year (stuff got in between), until somebody asked me why on earth we werenâ€™t just returning the result from the one-liner, not understanding why I was logging the difference. But he didnâ€™t dare remove the old stuff, and  I had become part of the problem ðŸ˜…</p>\n</div>",
      "created_utc": 1738917363.0,
      "score": 31,
      "ups": 31,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbg5iul/",
      "parent_id": "t3_1ijq3et",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T00:36:03"
    },
    {
      "id": "mbgjn5u",
      "author": null,
      "body": "[deleted]",
      "body_html": "<div class=\"md\"><p>[deleted]</p>\n</div>",
      "created_utc": 1738925999.0,
      "score": 29,
      "ups": 29,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbgjn5u/",
      "parent_id": "t3_1ijq3et",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T02:59:59"
    },
    {
      "id": "mbgqgvo",
      "author": "SikhGamer",
      "body": ">Engineers were afraid to delete unused resources because they weren't sure who owned them or if they'd break something.\n\nClick ops or IaC/Terraform?",
      "body_html": "<div class=\"md\"><blockquote>\n<p>Engineers were afraid to delete unused resources because they weren&#39;t sure who owned them or if they&#39;d break something.</p>\n</blockquote>\n\n<p>Click ops or IaC/Terraform?</p>\n</div>",
      "created_utc": 1738929586.0,
      "score": 6,
      "ups": 6,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbgqgvo/",
      "parent_id": "t3_1ijq3et",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T03:59:46"
    },
    {
      "id": "mbhz9re",
      "author": "ppafford",
      "body": "tagging resources helps as well",
      "body_html": "<div class=\"md\"><p>tagging resources helps as well</p>\n</div>",
      "created_utc": 1738945037.0,
      "score": 7,
      "ups": 7,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbhz9re/",
      "parent_id": "t3_1ijq3et",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T08:17:17"
    },
    {
      "id": "mbi46w9",
      "author": "Dirichilet1051",
      "body": "\\> Engineers were afraid to delete unused resources because they weren't sure who owned them or if they'd break something.\n\nDitto on this and the associated lesson (\"Implement clear ownership\"). Our team had an AWS account with couple of IAM users, KMS keys with too many usecases. Over the years, we lost track of who used the IAM user and when it came to hand over the AWS account to another team, struggled on which resources to delete/retain and be backwards-compatible/not break someone.",
      "body_html": "<div class=\"md\"><p>&gt; Engineers were afraid to delete unused resources because they weren&#39;t sure who owned them or if they&#39;d break something.</p>\n\n<p>Ditto on this and the associated lesson (&quot;Implement clear ownership&quot;). Our team had an AWS account with couple of IAM users, KMS keys with too many usecases. Over the years, we lost track of who used the IAM user and when it came to hand over the AWS account to another team, struggled on which resources to delete/retain and be backwards-compatible/not break someone.</p>\n</div>",
      "created_utc": 1738946430.0,
      "score": 4,
      "ups": 4,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbi46w9/",
      "parent_id": "t3_1ijq3et",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T08:40:30"
    },
    {
      "id": "mblxp1w",
      "author": "Tainen",
      "body": "itâ€™s not one or the other. itâ€™s both, and. Rightsizing, idle resource cleanup etc all requires cultural change to do it consistently over time.\n\nIf you treat optimization as a tactical task list, thatâ€™s about the value youâ€™ll get. if you shift left and embed cost as a non-functional requirement and a resource same as cpu, memory, etc, it starts to be part of how you design and build. It takes a LONG time to change that culture, and competing priorities donâ€™t help either.",
      "body_html": "<div class=\"md\"><p>itâ€™s not one or the other. itâ€™s both, and. Rightsizing, idle resource cleanup etc all requires cultural change to do it consistently over time.</p>\n\n<p>If you treat optimization as a tactical task list, thatâ€™s about the value youâ€™ll get. if you shift left and embed cost as a non-functional requirement and a resource same as cpu, memory, etc, it starts to be part of how you design and build. It takes a LONG time to change that culture, and competing priorities donâ€™t help either.</p>\n</div>",
      "created_utc": 1738989671.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mblxp1w/",
      "parent_id": "t3_1ijq3et",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T20:41:11"
    },
    {
      "id": "mbq5nij",
      "author": "goroos2001",
      "body": "(While I work for AWS, I only speak for myself on social media).\n\n100,000% YES!!!!!!\n\nIf you're a cloud customer, cost optimization is primarily a culture problem, not primarily a technical problem. I've seen this repeated in literally every AWS customer I've engaged.\n\nWhen I \\_was\\_ an AWS customer (and I had responsibility for the AWS bill of a major Fortune 200 eCommerce retailer), the best way we found to do cost optimization was to put \"infrastructure cost per unit of business work\" on all the operations dashboards right next to API latencies and error rates. So, for example, every team that delivered a family of APIs for the site had a dashboard that showed their API response times, error counts, and AWS cost per 1k checkouts (it's super important that this KPI be a ratio between cost and value delivered - you don't want to incentivize dropping absolute cost - you can do that quite easily by shedding traffic - which is what engineers will do if their only goal is to drive cost to 0). When we needed to prioritize cost optimization work on the scrums, we sent a dashboard out every day that had those metrics for the previous day for every scrum (so they could see how they compared to each other) - and we sent that dashboard to EVERY SINGLE ENGINEER ON THE FLOOR, CC'ing the CTO.\n\nWhile I can't say the costs immediately spiraled down, I can say that the bill WAS growing frighteningly fast and the slope of our growth dropped by at least half an order of magnitude as soon as the product owners had time to account for the new data in their roadmaps and the CTO had a chance to praise a few of them in front of the entire engineering floor.",
      "body_html": "<div class=\"md\"><p>(While I work for AWS, I only speak for myself on social media).</p>\n\n<p>100,000% YES!!!!!!</p>\n\n<p>If you&#39;re a cloud customer, cost optimization is primarily a culture problem, not primarily a technical problem. I&#39;ve seen this repeated in literally every AWS customer I&#39;ve engaged.</p>\n\n<p>When I _was_ an AWS customer (and I had responsibility for the AWS bill of a major Fortune 200 eCommerce retailer), the best way we found to do cost optimization was to put &quot;infrastructure cost per unit of business work&quot; on all the operations dashboards right next to API latencies and error rates. So, for example, every team that delivered a family of APIs for the site had a dashboard that showed their API response times, error counts, and AWS cost per 1k checkouts (it&#39;s super important that this KPI be a ratio between cost and value delivered - you don&#39;t want to incentivize dropping absolute cost - you can do that quite easily by shedding traffic - which is what engineers will do if their only goal is to drive cost to 0). When we needed to prioritize cost optimization work on the scrums, we sent a dashboard out every day that had those metrics for the previous day for every scrum (so they could see how they compared to each other) - and we sent that dashboard to EVERY SINGLE ENGINEER ON THE FLOOR, CC&#39;ing the CTO.</p>\n\n<p>While I can&#39;t say the costs immediately spiraled down, I can say that the bill WAS growing frighteningly fast and the slope of our growth dropped by at least half an order of magnitude as soon as the product owners had time to account for the new data in their roadmaps and the CTO had a chance to praise a few of them in front of the entire engineering floor.</p>\n</div>",
      "created_utc": 1739049402.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbq5nij/",
      "parent_id": "t3_1ijq3et",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": true,
      "distinguished": null,
      "timestamp": "2025-02-08T13:16:42"
    },
    {
      "id": "mbiboiv",
      "author": "trnka",
      "body": "Ownership and cost-conscious culture really resonates. One of my teams made a lot of progress just by tagging things well and monitoring/improving the cost per use. It can be tough to get teams to tag everything though, especially if there are any old resources that aren't yet in Terraform.\n\nAt some level it comes down to leaders having a good rubric for comparing time spent reducing operational costs vs feature development vs reliability improvements and so on. Asking your finance leadership to teach your engineering leaders can help.\n\nOn fast, smooth deployments: I've seen big benefits from that but cost reduction wasn't one of them.",
      "body_html": "<div class=\"md\"><p>Ownership and cost-conscious culture really resonates. One of my teams made a lot of progress just by tagging things well and monitoring/improving the cost per use. It can be tough to get teams to tag everything though, especially if there are any old resources that aren&#39;t yet in Terraform.</p>\n\n<p>At some level it comes down to leaders having a good rubric for comparing time spent reducing operational costs vs feature development vs reliability improvements and so on. Asking your finance leadership to teach your engineering leaders can help.</p>\n\n<p>On fast, smooth deployments: I&#39;ve seen big benefits from that but cost reduction wasn&#39;t one of them.</p>\n</div>",
      "created_utc": 1738948544.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbiboiv/",
      "parent_id": "t3_1ijq3et",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T09:15:44"
    },
    {
      "id": "mbk1v5e",
      "author": null,
      "body": "the more contractors you have the more overspend",
      "body_html": "<div class=\"md\"><p>the more contractors you have the more overspend</p>\n</div>",
      "created_utc": 1738966359.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbk1v5e/",
      "parent_id": "t3_1ijq3et",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T14:12:39"
    },
    {
      "id": "mbu54ji",
      "author": "jeff889",
      "body": "Clear ownership is a pipe dream for some of us. I have zero control over VPs who constantly reconfigure teams and leave infra unowned.",
      "body_html": "<div class=\"md\"><p>Clear ownership is a pipe dream for some of us. I have zero control over VPs who constantly reconfigure teams and leave infra unowned.</p>\n</div>",
      "created_utc": 1739109713.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbu54ji/",
      "parent_id": "t3_1ijq3et",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-09T06:01:53"
    },
    {
      "id": "mbgxu3e",
      "author": "ReturnOfNogginboink",
      "body": "Your cloud bill is often proportional to the number of cloud engineers in the company.",
      "body_html": "<div class=\"md\"><p>Your cloud bill is often proportional to the number of cloud engineers in the company.</p>\n</div>",
      "created_utc": 1738932827.0,
      "score": 0,
      "ups": 0,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbgxu3e/",
      "parent_id": "t3_1ijq3et",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T04:53:47"
    },
    {
      "id": "mbg77tw",
      "author": "napcae",
      "body": "Oh man, I feel this in my bones! \nIt's like we've all been part of that \"haunted codebase\" where nobody dares to touch anything for fear of awakening ancient spirits (or just breaking production). \n\nYour URL parser saga is a perfect example of how technical debt can become emotional debt too. \n\nIt's funny how we can go from being the frustrated newcomer to becoming part of the problem ourselves. \nI've definitely been there, adding \"temporary\" logging or comparisons that somehow become permanent fixtures. \n\nIt's like archaeological layers in code - each generation adds their own little workarounds and safeguards. \n\nThe good news is, recognizing the problem is half the battle. \n\nMaybe next time we can channel our inner European flair - be bold like the Dutch, efficient like the Germans, and add a touch of Italian \"eh, who cares, let's just try it\" attitude. After all, if we're not occasionally breaking things, are we even really developing? ðŸ˜‰",
      "body_html": "<div class=\"md\"><p>Oh man, I feel this in my bones! \nIt&#39;s like we&#39;ve all been part of that &quot;haunted codebase&quot; where nobody dares to touch anything for fear of awakening ancient spirits (or just breaking production). </p>\n\n<p>Your URL parser saga is a perfect example of how technical debt can become emotional debt too. </p>\n\n<p>It&#39;s funny how we can go from being the frustrated newcomer to becoming part of the problem ourselves. \nI&#39;ve definitely been there, adding &quot;temporary&quot; logging or comparisons that somehow become permanent fixtures. </p>\n\n<p>It&#39;s like archaeological layers in code - each generation adds their own little workarounds and safeguards. </p>\n\n<p>The good news is, recognizing the problem is half the battle. </p>\n\n<p>Maybe next time we can channel our inner European flair - be bold like the Dutch, efficient like the Germans, and add a touch of Italian &quot;eh, who cares, let&#39;s just try it&quot; attitude. After all, if we&#39;re not occasionally breaking things, are we even really developing? ðŸ˜‰</p>\n</div>",
      "created_utc": 1738918425.0,
      "score": 6,
      "ups": 6,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbg77tw/",
      "parent_id": "t1_mbg5iul",
      "depth": 1,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T00:53:45"
    },
    {
      "id": "mbhagtn",
      "author": "werepenguins",
      "body": "I'm a 1-man team (former Amazonian) and the first thing I did when starting my new company is setup CI/CD and infrastructure as code for everything.  It's not just that I want to be ready should I need to hire someone, but I honestly don't trust myself.  Everything needs to have a quick roll-back or patch if needed.  Without the proper infrastructure, you could be putting your customers in a precarious situation.",
      "body_html": "<div class=\"md\"><p>I&#39;m a 1-man team (former Amazonian) and the first thing I did when starting my new company is setup CI/CD and infrastructure as code for everything.  It&#39;s not just that I want to be ready should I need to hire someone, but I honestly don&#39;t trust myself.  Everything needs to have a quick roll-back or patch if needed.  Without the proper infrastructure, you could be putting your customers in a precarious situation.</p>\n</div>",
      "created_utc": 1738937455.0,
      "score": 9,
      "ups": 9,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbhagtn/",
      "parent_id": "t1_mbgjn5u",
      "depth": 1,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T06:10:55"
    },
    {
      "id": "mbh3sym",
      "author": "napcae",
      "body": "Absolutely, in modern team topologies going for hosted solutions and start with TF is non negotiable. Sometimes I like the workflow of click ops into terraformer though, especially for MVPs.",
      "body_html": "<div class=\"md\"><p>Absolutely, in modern team topologies going for hosted solutions and start with TF is non negotiable. Sometimes I like the workflow of click ops into terraformer though, especially for MVPs.</p>\n</div>",
      "created_utc": 1738935109.0,
      "score": 5,
      "ups": 5,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbh3sym/",
      "parent_id": "t1_mbgjn5u",
      "depth": 1,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T05:31:49"
    },
    {
      "id": "mbh37rj",
      "author": "napcae",
      "body": "All Terraform",
      "body_html": "<div class=\"md\"><p>All Terraform</p>\n</div>",
      "created_utc": 1738934893.0,
      "score": 3,
      "ups": 3,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbh37rj/",
      "parent_id": "t1_mbgqgvo",
      "depth": 1,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T05:28:13"
    },
    {
      "id": "mbk8jti",
      "author": "tophology",
      "body": "Mandatory tagging via SCPs",
      "body_html": "<div class=\"md\"><p>Mandatory tagging via SCPs</p>\n</div>",
      "created_utc": 1738968402.0,
      "score": 6,
      "ups": 6,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbk8jti/",
      "parent_id": "t1_mbhz9re",
      "depth": 1,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T14:46:42"
    },
    {
      "id": "mbtlfru",
      "author": "napcae",
      "body": "I hear you, itâ€™s not only cultural changes - itâ€™s needed to drive the technical implementation which ultimately drives cost down!",
      "body_html": "<div class=\"md\"><p>I hear you, itâ€™s not only cultural changes - itâ€™s needed to drive the technical implementation which ultimately drives cost down!</p>\n</div>",
      "created_utc": 1739100889.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbtlfru/",
      "parent_id": "t1_mblxp1w",
      "depth": 1,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-09T03:34:49"
    },
    {
      "id": "mbtl6ld",
      "author": "napcae",
      "body": "Glad Iâ€™m not the only one making this observation, it enforces my believe when I see someone with your breath of experience notices it the same way!",
      "body_html": "<div class=\"md\"><p>Glad Iâ€™m not the only one making this observation, it enforces my believe when I see someone with your breath of experience notices it the same way!</p>\n</div>",
      "created_utc": 1739100751.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbtl6ld/",
      "parent_id": "t1_mbq5nij",
      "depth": 1,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-09T03:32:31"
    },
    {
      "id": "mbh314x",
      "author": "napcae",
      "body": "Interesting insight, what makes you say that?",
      "body_html": "<div class=\"md\"><p>Interesting insight, what makes you say that?</p>\n</div>",
      "created_utc": 1738934825.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbh314x/",
      "parent_id": "t1_mbgxu3e",
      "depth": 1,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T05:27:05"
    },
    {
      "id": "mbkklb8",
      "author": "SikhGamer",
      "body": "This this is a laziness problem.\n\nAssuming that Terraform is in some sort of git like system it should be clear enough who created it and who is maintaining it.",
      "body_html": "<div class=\"md\"><p>This this is a laziness problem.</p>\n\n<p>Assuming that Terraform is in some sort of git like system it should be clear enough who created it and who is maintaining it.</p>\n</div>",
      "created_utc": 1738972315.0,
      "score": 5,
      "ups": 5,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbkklb8/",
      "parent_id": "t1_mbh37rj",
      "depth": 2,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T15:51:55"
    },
    {
      "id": "mburl2s",
      "author": "Tainen",
      "body": "https://youtu.be/Pnzl4Z5TpwY",
      "body_html": "<div class=\"md\"><p><a href=\"https://youtu.be/Pnzl4Z5TpwY\">https://youtu.be/Pnzl4Z5TpwY</a></p>\n</div>",
      "created_utc": 1739117032.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mburl2s/",
      "parent_id": "t1_mbtlfru",
      "depth": 2,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-09T08:03:52"
    },
    {
      "id": "mbhq8we",
      "author": "ReturnOfNogginboink",
      "body": "I think that saying originated from quinnypig, but I can't be sure. Maybe Corey can chime in here. (But I'm sure he'd agree even if he didn't originally coin the term.)\n\nAh! It was quinnypig!\n\n[https://www.lastweekinaws.com/podcast/screaming-in-the-cloud/episode-51-size-of-cloud-bill-not-about-number-of-customers-but-number-of-engineers-you-ve-hired/](https://www.lastweekinaws.com/podcast/screaming-in-the-cloud/episode-51-size-of-cloud-bill-not-about-number-of-customers-but-number-of-engineers-you-ve-hired/)",
      "body_html": "<div class=\"md\"><p>I think that saying originated from quinnypig, but I can&#39;t be sure. Maybe Corey can chime in here. (But I&#39;m sure he&#39;d agree even if he didn&#39;t originally coin the term.)</p>\n\n<p>Ah! It was quinnypig!</p>\n\n<p><a href=\"https://www.lastweekinaws.com/podcast/screaming-in-the-cloud/episode-51-size-of-cloud-bill-not-about-number-of-customers-but-number-of-engineers-you-ve-hired/\">https://www.lastweekinaws.com/podcast/screaming-in-the-cloud/episode-51-size-of-cloud-bill-not-about-number-of-customers-but-number-of-engineers-you-ve-hired/</a></p>\n</div>",
      "created_utc": 1738942441.0,
      "score": 5,
      "ups": 5,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbhq8we/",
      "parent_id": "t1_mbh314x",
      "depth": 2,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T07:34:01"
    },
    {
      "id": "mbi55wd",
      "author": "gex80",
      "body": "Depending on the angle they are going with this. More cooks in the kitchen means more things gets lost in the shuffle. More unique views also introduce potential deviations against the normal setup for one reason or another.\n\nI struggle with this and my team. The issue isn't the tech, it's making sure the engineer doesn't take shortcuts or doesn't do one off things just to unblock other. I have my most senior engineer install an MQ service on a non-prod web caching server because it was already available and didn't want to spin up a new instance out of cost fears and also did not want to block devs. So the free and fast option is to install on an already running server.\n\nThe issue is in their mind, they solved 2 problems, cost and unblocking devs. The problem is, it should've never been on there and no one expects a single purpose server to perform a task that it was not built for.\n\nThe other issue is engineers tend to leave junk behind. There are so many times I have to clean up test instances after my team because they legitimately needed them for something, they completed and implemented whatever was being tested, and they left the test server running.\n\nAnother issue we have is our devs control lambdas and their whole process. So devs will create lambdas leave them behind and incurr whatever charges they incur whether needed or not. Because lambdas aren't actual infra (ec2, networking, containers services, etc), we let them do what they want since they write the code and deploy it. They are also responsible for troubleshooting said lambdas and we'll provide assistance whereever.",
      "body_html": "<div class=\"md\"><p>Depending on the angle they are going with this. More cooks in the kitchen means more things gets lost in the shuffle. More unique views also introduce potential deviations against the normal setup for one reason or another.</p>\n\n<p>I struggle with this and my team. The issue isn&#39;t the tech, it&#39;s making sure the engineer doesn&#39;t take shortcuts or doesn&#39;t do one off things just to unblock other. I have my most senior engineer install an MQ service on a non-prod web caching server because it was already available and didn&#39;t want to spin up a new instance out of cost fears and also did not want to block devs. So the free and fast option is to install on an already running server.</p>\n\n<p>The issue is in their mind, they solved 2 problems, cost and unblocking devs. The problem is, it should&#39;ve never been on there and no one expects a single purpose server to perform a task that it was not built for.</p>\n\n<p>The other issue is engineers tend to leave junk behind. There are so many times I have to clean up test instances after my team because they legitimately needed them for something, they completed and implemented whatever was being tested, and they left the test server running.</p>\n\n<p>Another issue we have is our devs control lambdas and their whole process. So devs will create lambdas leave them behind and incurr whatever charges they incur whether needed or not. Because lambdas aren&#39;t actual infra (ec2, networking, containers services, etc), we let them do what they want since they write the code and deploy it. They are also responsible for troubleshooting said lambdas and we&#39;ll provide assistance whereever.</p>\n</div>",
      "created_utc": 1738946702.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbi55wd/",
      "parent_id": "t1_mbh314x",
      "depth": 2,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T08:45:02"
    },
    {
      "id": "mbky0sf",
      "author": "Rusty-Swashplate",
      "body": ">because it was already available and didn't want to spin up a new instance out of cost fears and also did not want to block devs.Â \n\nSeen this a lot. Everywhere. Good intention. Looks like the best solution overall. Did not consider the long term implication.\n\nIn programming you do refactoring to clean up sloppy (but working) code. In IaC this tends to be harder as it's often possible to modify existing instances manually or run a TF script in your home directory with no tags or anything similar to identify this new resource.\n\nGood to have Cloudtrail in those cases, so at least you know who did it. I assume that there's no shared admin account. AWS\\_access\\_keys are too easy to copy around.\n\nWhat helped for me:\n\n* **Send each department a list of their resources and the costs it created last month, with differences from the previous months and nice graphs.** Until we did this, most departments had simply no idea about the costs they created.\n* All infra is created via a git pipeline. Tagging is automatic with team name and purpose, although there are too many still using \"Test\" as the purpose.\n* AWS Organizations with tag policies because some people still have admin access to create stuff\n* Because the workload of a lot of departments has a weekly cycle (weekdays 9am-5pm), show their costs over the week. Most departments had every day of the week almost the same costs, but we worked closely with one which embraced cloud much more, and they cut their costs after working hours to a minimum and weekends were equally low. We used this to talk to other departments to tell them \"You can do this too! You can save 50% of your cloud costs!\". Most tried, but few embraced it completely. Still 25% saving is good.",
      "body_html": "<div class=\"md\"><blockquote>\n<p>because it was already available and didn&#39;t want to spin up a new instance out of cost fears and also did not want to block devs.Â </p>\n</blockquote>\n\n<p>Seen this a lot. Everywhere. Good intention. Looks like the best solution overall. Did not consider the long term implication.</p>\n\n<p>In programming you do refactoring to clean up sloppy (but working) code. In IaC this tends to be harder as it&#39;s often possible to modify existing instances manually or run a TF script in your home directory with no tags or anything similar to identify this new resource.</p>\n\n<p>Good to have Cloudtrail in those cases, so at least you know who did it. I assume that there&#39;s no shared admin account. AWS_access_keys are too easy to copy around.</p>\n\n<p>What helped for me:</p>\n\n<ul>\n<li><strong>Send each department a list of their resources and the costs it created last month, with differences from the previous months and nice graphs.</strong> Until we did this, most departments had simply no idea about the costs they created.</li>\n<li>All infra is created via a git pipeline. Tagging is automatic with team name and purpose, although there are too many still using &quot;Test&quot; as the purpose.</li>\n<li>AWS Organizations with tag policies because some people still have admin access to create stuff</li>\n<li>Because the workload of a lot of departments has a weekly cycle (weekdays 9am-5pm), show their costs over the week. Most departments had every day of the week almost the same costs, but we worked closely with one which embraced cloud much more, and they cut their costs after working hours to a minimum and weekends were equally low. We used this to talk to other departments to tell them &quot;You can do this too! You can save 50% of your cloud costs!&quot;. Most tried, but few embraced it completely. Still 25% saving is good.</li>\n</ul>\n</div>",
      "created_utc": 1738976746.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/aws/comments/1ijq3et/til_fixing_team_dynamics_can_cut_aws_costs_more/mbky0sf/",
      "parent_id": "t1_mbi55wd",
      "depth": 3,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-02-07T17:05:46"
    }
  ],
  "total_comments": 24,
  "fetched_at": "2025-09-13T20:47:33.752199"
}