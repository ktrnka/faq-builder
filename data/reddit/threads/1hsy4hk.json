{
  "submission": {
    "id": "1hsy4hk",
    "title": "[D] ML Widely Adopted in Anti-Cheat Solutions",
    "author": "SGeriLOL",
    "selftext": "Hey everyone,\n\nI’ve been working on an anti-cheat plugin/add-on recently for my old-time favourite game, and something’s been bugging me: why don’t we see more anti-cheat solutions using machine learning? In my research, I didn’t come across many established or paid options that clearly advertise ML as part of their system. Actually, not many settled framework- or engine-agnostic solutions are out there except the few \"industry-standard\" ones, like EAC or BattleEye that can't be integrated by anyone easily.\n\nThe only one I've found that seems to hint at it is I3D FairFight, but all I could find were vague PR whitepapers with no real technical details. It’s hard to tell if they’re actually using ML in a meaningful way or just throwing around buzzwords for marketing.\n\nThis got me thinking: why hasn’t ML become a standard for anti-cheat? Is it because of scalability issues, a lack of training data, or maybe companies just don’t want to reveal their methods to avoid giving cheaters a head start? Or could it be that ML *is* used more widely, but it’s kept under wraps?\n\nIn my case, building a custom ML-based system isn’t an option right now - it’d be too much of a headache to scale properly. That said, I do have access to a ton of data that could be used for training if I could find the right solution.\n\nSo, I’ve got a few questions for anyone here who’s familiar with this space:\n\n1. Do you know of any other anti-cheat solutions that actually use ML?\n2. What do you think is holding the industry back from adopting ML more openly?\n3. Are there any resources or companies you’d recommend checking out to learn more about ML in anti-cheat?\n\n",
    "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone,</p>\n\n<p>I’ve been working on an anti-cheat plugin/add-on recently for my old-time favourite game, and something’s been bugging me: why don’t we see more anti-cheat solutions using machine learning? In my research, I didn’t come across many established or paid options that clearly advertise ML as part of their system. Actually, not many settled framework- or engine-agnostic solutions are out there except the few &quot;industry-standard&quot; ones, like EAC or BattleEye that can&#39;t be integrated by anyone easily.</p>\n\n<p>The only one I&#39;ve found that seems to hint at it is I3D FairFight, but all I could find were vague PR whitepapers with no real technical details. It’s hard to tell if they’re actually using ML in a meaningful way or just throwing around buzzwords for marketing.</p>\n\n<p>This got me thinking: why hasn’t ML become a standard for anti-cheat? Is it because of scalability issues, a lack of training data, or maybe companies just don’t want to reveal their methods to avoid giving cheaters a head start? Or could it be that ML <em>is</em> used more widely, but it’s kept under wraps?</p>\n\n<p>In my case, building a custom ML-based system isn’t an option right now - it’d be too much of a headache to scale properly. That said, I do have access to a ton of data that could be used for training if I could find the right solution.</p>\n\n<p>So, I’ve got a few questions for anyone here who’s familiar with this space:</p>\n\n<ol>\n<li>Do you know of any other anti-cheat solutions that actually use ML?</li>\n<li>What do you think is holding the industry back from adopting ML more openly?</li>\n<li>Are there any resources or companies you’d recommend checking out to learn more about ML in anti-cheat?</li>\n</ol>\n</div><!-- SC_ON -->",
    "url": "https://www.reddit.com/r/MachineLearning/comments/1hsy4hk/d_ml_widely_adopted_in_anticheat_solutions/",
    "permalink": "/r/MachineLearning/comments/1hsy4hk/d_ml_widely_adopted_in_anticheat_solutions/",
    "subreddit": "MachineLearning",
    "created_utc": 1735941112.0,
    "score": 0,
    "ups": 0,
    "downs": 0,
    "upvote_ratio": 0.38,
    "num_comments": 8,
    "is_self": true,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "locked": false,
    "archived": false,
    "distinguished": null,
    "link_flair_text": "Discussion",
    "timestamp": "2025-01-03T13:51:52"
  },
  "comments": [
    {
      "id": "m597bh0",
      "author": "VioletCrow",
      "body": "It probably isn't worth using AI based anti-cheats right now while the majority of gamers are seemingly okay with putting ring 0 anti-cheats on their system.",
      "body_html": "<div class=\"md\"><p>It probably isn&#39;t worth using AI based anti-cheats right now while the majority of gamers are seemingly okay with putting ring 0 anti-cheats on their system.</p>\n</div>",
      "created_utc": 1735942067.0,
      "score": 15,
      "ups": 15,
      "downs": 0,
      "permalink": "/r/MachineLearning/comments/1hsy4hk/d_ml_widely_adopted_in_anticheat_solutions/m597bh0/",
      "parent_id": "t3_1hsy4hk",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-03T14:07:47"
    },
    {
      "id": "m59hszx",
      "author": "currentscurrents",
      "body": "> why hasn’t ML become a standard for anti-cheat?\n\nFlip question: why do you think ML would make anti-cheat more effective?",
      "body_html": "<div class=\"md\"><blockquote>\n<p>why hasn’t ML become a standard for anti-cheat?</p>\n</blockquote>\n\n<p>Flip question: why do you think ML would make anti-cheat more effective?</p>\n</div>",
      "created_utc": 1735945462.0,
      "score": 10,
      "ups": 10,
      "downs": 0,
      "permalink": "/r/MachineLearning/comments/1hsy4hk/d_ml_widely_adopted_in_anticheat_solutions/m59hszx/",
      "parent_id": "t3_1hsy4hk",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-03T15:04:22"
    },
    {
      "id": "m59sj3o",
      "author": "trnka",
      "body": "My experience at my previous studio was that we preferred to prevent cheating when possible, and statistical methods worked well in most other cases.\n\nIn the first case, there were many exploits that we wanted to just fix. For example, when we found out about item duplication exploits we tried to figure out how they worked and then fixed the bugs that enabled them.\n\nIn the other case, the cheating behavior was often very clear in data. Suppose 99.9% of players earned 100-1,000 gold per hour of play time. There would be some players at 100,000 gold per hour and those were worth investigating further. Sometimes it was bad stuff that was worth banning. Other times it was a bug that needed to be fixed. Similar statistical methods worked on other signals, like people that jumped around the map too quickly. In these cases it's important to not just ban people blindly but to work with leadership and support teams to decide how to approach it because it can be really bad if you outright permaban someone incorrectly.\n\nIf we'd gotten to be a bigger studio maybe we would've addressed all the basic exploits and needed more subtle detectors like ML.",
      "body_html": "<div class=\"md\"><p>My experience at my previous studio was that we preferred to prevent cheating when possible, and statistical methods worked well in most other cases.</p>\n\n<p>In the first case, there were many exploits that we wanted to just fix. For example, when we found out about item duplication exploits we tried to figure out how they worked and then fixed the bugs that enabled them.</p>\n\n<p>In the other case, the cheating behavior was often very clear in data. Suppose 99.9% of players earned 100-1,000 gold per hour of play time. There would be some players at 100,000 gold per hour and those were worth investigating further. Sometimes it was bad stuff that was worth banning. Other times it was a bug that needed to be fixed. Similar statistical methods worked on other signals, like people that jumped around the map too quickly. In these cases it&#39;s important to not just ban people blindly but to work with leadership and support teams to decide how to approach it because it can be really bad if you outright permaban someone incorrectly.</p>\n\n<p>If we&#39;d gotten to be a bigger studio maybe we would&#39;ve addressed all the basic exploits and needed more subtle detectors like ML.</p>\n</div>",
      "created_utc": 1735949083.0,
      "score": 6,
      "ups": 6,
      "downs": 0,
      "permalink": "/r/MachineLearning/comments/1hsy4hk/d_ml_widely_adopted_in_anticheat_solutions/m59sj3o/",
      "parent_id": "t3_1hsy4hk",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-03T16:04:43"
    },
    {
      "id": "m59nfc4",
      "author": "Ty4Readin",
      "body": "I think the primary issue is lack of training data.\n\nYou need an extremely large dataset with accurate labels which are difficult to obtain because cheaters try to go undetected.\n\nIf you created a training dataset, there's an issue: you only have correct labels for the cheaters you've already caught. But what about the cheaters you haven't caught? You will have them labeled as non-cheating in your training dataset!\n\nThat can be a big issue with ML in general. You need to have some reliable way of accurately labeling samples. You almost need an accurate anti cheating model to detect who's a cheater first, but that's what you're trying to build.",
      "body_html": "<div class=\"md\"><p>I think the primary issue is lack of training data.</p>\n\n<p>You need an extremely large dataset with accurate labels which are difficult to obtain because cheaters try to go undetected.</p>\n\n<p>If you created a training dataset, there&#39;s an issue: you only have correct labels for the cheaters you&#39;ve already caught. But what about the cheaters you haven&#39;t caught? You will have them labeled as non-cheating in your training dataset!</p>\n\n<p>That can be a big issue with ML in general. You need to have some reliable way of accurately labeling samples. You almost need an accurate anti cheating model to detect who&#39;s a cheater first, but that&#39;s what you&#39;re trying to build.</p>\n</div>",
      "created_utc": 1735947360.0,
      "score": 6,
      "ups": 6,
      "downs": 0,
      "permalink": "/r/MachineLearning/comments/1hsy4hk/d_ml_widely_adopted_in_anticheat_solutions/m59nfc4/",
      "parent_id": "t3_1hsy4hk",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-03T15:36:00"
    },
    {
      "id": "m59spc7",
      "author": "bob80333",
      "body": "Valve used AI for anticheat in CS:GO and did a talk about it a few years ago at GDC.  It's not clear to me if it is still in use.\n\nTalk link:\nhttps://www.youtube.com/watch?v=kTiP0zKF9bc",
      "body_html": "<div class=\"md\"><p>Valve used AI for anticheat in CS:GO and did a talk about it a few years ago at GDC.  It&#39;s not clear to me if it is still in use.</p>\n\n<p>Talk link:\n<a href=\"https://www.youtube.com/watch?v=kTiP0zKF9bc\">https://www.youtube.com/watch?v=kTiP0zKF9bc</a></p>\n</div>",
      "created_utc": 1735949140.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MachineLearning/comments/1hsy4hk/d_ml_widely_adopted_in_anticheat_solutions/m59spc7/",
      "parent_id": "t3_1hsy4hk",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-03T16:05:40"
    },
    {
      "id": "m5cg8vo",
      "author": "JosephLam1",
      "body": "Its going to tank the performance if it runs on the client computer in real time",
      "body_html": "<div class=\"md\"><p>Its going to tank the performance if it runs on the client computer in real time</p>\n</div>",
      "created_utc": 1735994542.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MachineLearning/comments/1hsy4hk/d_ml_widely_adopted_in_anticheat_solutions/m5cg8vo/",
      "parent_id": "t3_1hsy4hk",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-04T04:42:22"
    },
    {
      "id": "m59595x",
      "author": "BeautyInUgly",
      "body": "Cost",
      "body_html": "<div class=\"md\"><p>Cost</p>\n</div>",
      "created_utc": 1735941424.0,
      "score": 0,
      "ups": 0,
      "downs": 0,
      "permalink": "/r/MachineLearning/comments/1hsy4hk/d_ml_widely_adopted_in_anticheat_solutions/m59595x/",
      "parent_id": "t3_1hsy4hk",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-03T13:57:04"
    },
    {
      "id": "m59n134",
      "author": "Ty4Readin",
      "body": "I'm not OP, but anti-cheat is a very hard problem to solve. In general, ML solutions could make it more effective because they learn more subtle patterns to detect cheating than could be manually coded.\n\nHowever, with that said, I think a lack of training data is the biggest issue. You will only have correct labels for the cheaters you've already caught.",
      "body_html": "<div class=\"md\"><p>I&#39;m not OP, but anti-cheat is a very hard problem to solve. In general, ML solutions could make it more effective because they learn more subtle patterns to detect cheating than could be manually coded.</p>\n\n<p>However, with that said, I think a lack of training data is the biggest issue. You will only have correct labels for the cheaters you&#39;ve already caught.</p>\n</div>",
      "created_utc": 1735947225.0,
      "score": 3,
      "ups": 3,
      "downs": 0,
      "permalink": "/r/MachineLearning/comments/1hsy4hk/d_ml_widely_adopted_in_anticheat_solutions/m59n134/",
      "parent_id": "t1_m59hszx",
      "depth": 1,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-03T15:33:45"
    }
  ],
  "total_comments": 8,
  "fetched_at": "2025-09-13T20:47:31.365791"
}