{
  "submission": {
    "id": "1i2zcqf",
    "title": "Classifier with 22.000 classes? ",
    "author": "FantasyFrikadel",
    "selftext": "I need to build a classifier with a huge amount of classes. I'm thinking that'a going to make my model quite big.\n\nSo, I was wondering if it's comon for suxh a situation the make a classifier with 2 outputs. For example output 1 has 22 classes and output 2 has a 1000.\n\nThat wat the combined output can address all 22.000 classes \n\nCould that work? ",
    "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>I need to build a classifier with a huge amount of classes. I&#39;m thinking that&#39;a going to make my model quite big.</p>\n\n<p>So, I was wondering if it&#39;s comon for suxh a situation the make a classifier with 2 outputs. For example output 1 has 22 classes and output 2 has a 1000.</p>\n\n<p>That wat the combined output can address all 22.000 classes </p>\n\n<p>Could that work? </p>\n</div><!-- SC_ON -->",
    "url": "https://www.reddit.com/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/",
    "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/",
    "subreddit": "MLQuestions",
    "created_utc": 1737061537.0,
    "score": 4,
    "ups": 4,
    "downs": 0,
    "upvote_ratio": 0.83,
    "num_comments": 18,
    "is_self": true,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "locked": false,
    "archived": false,
    "distinguished": null,
    "link_flair_text": "Beginner question üë∂",
    "timestamp": "2025-01-16T13:05:37"
  },
  "comments": [
    {
      "id": "m7ip4tu",
      "author": "ProfessionalBoss1531",
      "body": "Good luck generalizing this model.",
      "body_html": "<div class=\"md\"><p>Good luck generalizing this model.</p>\n</div>",
      "created_utc": 1737062264.0,
      "score": 10,
      "ups": 10,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7ip4tu/",
      "parent_id": "t3_1i2zcqf",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-16T13:17:44"
    },
    {
      "id": "m7ixlxb",
      "author": "pm_me_your_smth",
      "body": "That many classes will most likely be a problem, especially if your dataset isn't big enough or class boundaries aren't clear. I would try to decrease the number of classes to a more reasonable number if contextually possible. If you still need granular classes, I'd look into hierarchical classification.",
      "body_html": "<div class=\"md\"><p>That many classes will most likely be a problem, especially if your dataset isn&#39;t big enough or class boundaries aren&#39;t clear. I would try to decrease the number of classes to a more reasonable number if contextually possible. If you still need granular classes, I&#39;d look into hierarchical classification.</p>\n</div>",
      "created_utc": 1737064694.0,
      "score": 6,
      "ups": 6,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7ixlxb/",
      "parent_id": "t3_1i2zcqf",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-16T13:58:14"
    },
    {
      "id": "m7jtm60",
      "author": "BackgroundLow3793",
      "body": "Change the problem to ranking. Use metric learning ‚ò∫Ô∏è",
      "body_html": "<div class=\"md\"><p>Change the problem to ranking. Use metric learning ‚ò∫Ô∏è</p>\n</div>",
      "created_utc": 1737074976.0,
      "score": 5,
      "ups": 5,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7jtm60/",
      "parent_id": "t3_1i2zcqf",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-16T16:49:36"
    },
    {
      "id": "m7lnl6v",
      "author": "GrumpyDescartes",
      "body": "An easy lay-man attempt could be hierarchical/multi-step classification. \n\n1. Group your dataset by the classes, summarise some features at a class level\n2. Try and run some kind of clustering on your classes to identify N natural groups (N being reasonable and not 22K)\n3. Train a 1st level classifier on the original dataset to classify data into N class groups\n4. Train a 2nd level classifier on the N subsets of the original dataset each to classify them into their granular classes\n\nThis is a crude way of approaching this problem. Many challenges can arise including ‚Äúwhat if a new class pops up?‚Äù and your final error is compounded error of all models involved\n\nIf you‚Äôre more familiar with custom NN architectures beyond fully connected hidden layers, you might want to replicate the same idea but as 2 blocks in your NN. \n\n1st block to classify class groups, 2nd to take class group softmax output and classify into the exact classes. Include a residual connection of the input along with the output of the 1st block that then feeds into the 2nd block \n\nTrain the 1st block while freezing weights of the 2nd, then train the 2nd block while freezing the weights of the 1st. \n\nYou can write a custom loss function to include entropies of both classifications. \n\nThis way, you minimise the error compounding and ensure the final class predictions are just informed by the grouping and not solely determined. \n\nPS: include a default ‚Äúother‚Äù class that can handle the sporadically frequent classes present in your train data and can also handle any new classes that come up so that you don‚Äôt have to constantly retrain your model",
      "body_html": "<div class=\"md\"><p>An easy lay-man attempt could be hierarchical/multi-step classification. </p>\n\n<ol>\n<li>Group your dataset by the classes, summarise some features at a class level</li>\n<li>Try and run some kind of clustering on your classes to identify N natural groups (N being reasonable and not 22K)</li>\n<li>Train a 1st level classifier on the original dataset to classify data into N class groups</li>\n<li>Train a 2nd level classifier on the N subsets of the original dataset each to classify them into their granular classes</li>\n</ol>\n\n<p>This is a crude way of approaching this problem. Many challenges can arise including ‚Äúwhat if a new class pops up?‚Äù and your final error is compounded error of all models involved</p>\n\n<p>If you‚Äôre more familiar with custom NN architectures beyond fully connected hidden layers, you might want to replicate the same idea but as 2 blocks in your NN. </p>\n\n<p>1st block to classify class groups, 2nd to take class group softmax output and classify into the exact classes. Include a residual connection of the input along with the output of the 1st block that then feeds into the 2nd block </p>\n\n<p>Train the 1st block while freezing weights of the 2nd, then train the 2nd block while freezing the weights of the 1st. </p>\n\n<p>You can write a custom loss function to include entropies of both classifications. </p>\n\n<p>This way, you minimise the error compounding and ensure the final class predictions are just informed by the grouping and not solely determined. </p>\n\n<p>PS: include a default ‚Äúother‚Äù class that can handle the sporadically frequent classes present in your train data and can also handle any new classes that come up so that you don‚Äôt have to constantly retrain your model</p>\n</div>",
      "created_utc": 1737104442.0,
      "score": 4,
      "ups": 4,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7lnl6v/",
      "parent_id": "t3_1i2zcqf",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-17T01:00:42"
    },
    {
      "id": "m7l0m1o",
      "author": "trnka",
      "body": "Recommender systems deal often deal with that, and you'll likely find some good articles searching for neural networks for recommender systems with many items. One approach is to learn an embedding of your input and your output classes, and maximize the dot product between them. Then at inference time you embed your input and use vector search techniques to quickly find/sort relevant outputs. Two towers models work that way.",
      "body_html": "<div class=\"md\"><p>Recommender systems deal often deal with that, and you&#39;ll likely find some good articles searching for neural networks for recommender systems with many items. One approach is to learn an embedding of your input and your output classes, and maximize the dot product between them. Then at inference time you embed your input and use vector search techniques to quickly find/sort relevant outputs. Two towers models work that way.</p>\n</div>",
      "created_utc": 1737091181.0,
      "score": 3,
      "ups": 3,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7l0m1o/",
      "parent_id": "t3_1i2zcqf",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-16T21:19:41"
    },
    {
      "id": "m7jul2r",
      "author": "JulixQuid",
      "body": "Let's asume the remote possibility that you have enough quantity and quality of data for all the classes. \nThen I would suggest to split the classifier into several classifiers of wide groups of categories. And then make a classifier for each category. \nOf course, You can always have the option to muscle your way into the result using fit and predict with any model you want. But that might be too much for the amount of classes you are handling.",
      "body_html": "<div class=\"md\"><p>Let&#39;s asume the remote possibility that you have enough quantity and quality of data for all the classes. \nThen I would suggest to split the classifier into several classifiers of wide groups of categories. And then make a classifier for each category. \nOf course, You can always have the option to muscle your way into the result using fit and predict with any model you want. But that might be too much for the amount of classes you are handling.</p>\n</div>",
      "created_utc": 1737075305.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7jul2r/",
      "parent_id": "t3_1i2zcqf",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-16T16:55:05"
    },
    {
      "id": "m7k9qx7",
      "author": "xEdwin23x",
      "body": "Look into extreme classification approaches, but yes it's been done before and can be done for even more classes.",
      "body_html": "<div class=\"md\"><p>Look into extreme classification approaches, but yes it&#39;s been done before and can be done for even more classes.</p>\n</div>",
      "created_utc": 1737080577.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7k9qx7/",
      "parent_id": "t3_1i2zcqf",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-16T18:22:57"
    },
    {
      "id": "m7ipbtc",
      "author": "Immudzen",
      "body": "I have done more than this with a neural network and it worked fine. You just have to implement it correctly.",
      "body_html": "<div class=\"md\"><p>I have done more than this with a neural network and it worked fine. You just have to implement it correctly.</p>\n</div>",
      "created_utc": 1737062318.0,
      "score": 3,
      "ups": 3,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7ipbtc/",
      "parent_id": "t3_1i2zcqf",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-16T13:18:38"
    },
    {
      "id": "m7lfuk4",
      "author": "WhiteGoldRing",
      "body": "I successfully used contrastive learning to make a classifier for even slightly more labels than that, and there are probably even better approaches than what I used. It depends on your data as it always does.",
      "body_html": "<div class=\"md\"><p>I successfully used contrastive learning to make a classifier for even slightly more labels than that, and there are probably even better approaches than what I used. It depends on your data as it always does.</p>\n</div>",
      "created_utc": 1737099408.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7lfuk4/",
      "parent_id": "t3_1i2zcqf",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-16T23:36:48"
    },
    {
      "id": "m7lo38k",
      "author": "tornado28",
      "body": "You could look into softmax trees (similar to your 22x1000 approach) or adaptive softmax. A problem with so many classes is that it takes a lot of computation to compute probabilities for so many classes. If computational efficiency is a consideration you'll benefit from approaches that avoid explicitly computing probabilities for every class every time.",
      "body_html": "<div class=\"md\"><p>You could look into softmax trees (similar to your 22x1000 approach) or adaptive softmax. A problem with so many classes is that it takes a lot of computation to compute probabilities for so many classes. If computational efficiency is a consideration you&#39;ll benefit from approaches that avoid explicitly computing probabilities for every class every time.</p>\n</div>",
      "created_utc": 1737104784.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7lo38k/",
      "parent_id": "t3_1i2zcqf",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-17T01:06:24"
    },
    {
      "id": "m7m6ntq",
      "author": "adityashukla8",
      "body": "Can you share what's the use case and what is the data about?",
      "body_html": "<div class=\"md\"><p>Can you share what&#39;s the use case and what is the data about?</p>\n</div>",
      "created_utc": 1737115911.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7m6ntq/",
      "parent_id": "t3_1i2zcqf",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-17T04:11:51"
    },
    {
      "id": "m7pmxvs",
      "author": "whydoesthisitch",
      "body": "This is basically what LLMs do when selecting a next token (the ~22,000 classes part, not the split output). Problem is, they have to be huge, and require gigantic amounts of data to train.",
      "body_html": "<div class=\"md\"><p>This is basically what LLMs do when selecting a next token (the ~22,000 classes part, not the split output). Problem is, they have to be huge, and require gigantic amounts of data to train.</p>\n</div>",
      "created_utc": 1737154837.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7pmxvs/",
      "parent_id": "t3_1i2zcqf",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-17T15:00:37"
    },
    {
      "id": "m7qafd2",
      "author": "NuclearVII",
      "body": "Is there any topology to the 22k classes that you can exploit?",
      "body_html": "<div class=\"md\"><p>Is there any topology to the 22k classes that you can exploit?</p>\n</div>",
      "created_utc": 1737162910.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7qafd2/",
      "parent_id": "t3_1i2zcqf",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-17T17:15:10"
    },
    {
      "id": "m8cyax2",
      "author": "asankhs",
      "body": "You can try with adaptive-classifier [https://github.com/codelion/adaptive-classifier](https://github.com/codelion/adaptive-classifier) it is designed for such cases.",
      "body_html": "<div class=\"md\"><p>You can try with adaptive-classifier <a href=\"https://github.com/codelion/adaptive-classifier\">https://github.com/codelion/adaptive-classifier</a> it is designed for such cases.</p>\n</div>",
      "created_utc": 1737472633.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m8cyax2/",
      "parent_id": "t3_1i2zcqf",
      "depth": 0,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-21T07:17:13"
    },
    {
      "id": "m7iqgkz",
      "author": "FantasyFrikadel",
      "body": "Can you elaborate?¬†",
      "body_html": "<div class=\"md\"><p>Can you elaborate?¬†</p>\n</div>",
      "created_utc": 1737062643.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7iqgkz/",
      "parent_id": "t1_m7ip4tu",
      "depth": 1,
      "is_submitter": true,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-16T13:24:03"
    },
    {
      "id": "m7rrreh",
      "author": "ZambiaZigZag",
      "body": "I have tried something similar with unsatisfactory results. Can you explain a bit about your implementation?",
      "body_html": "<div class=\"md\"><p>I have tried something similar with unsatisfactory results. Can you explain a bit about your implementation?</p>\n</div>",
      "created_utc": 1737186926.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7rrreh/",
      "parent_id": "t1_m7ipbtc",
      "depth": 1,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-17T23:55:26"
    },
    {
      "id": "m7irfd8",
      "author": null,
      "body": "Overfitting",
      "body_html": "<div class=\"md\"><p>Overfitting</p>\n</div>",
      "created_utc": 1737062920.0,
      "score": 2,
      "ups": 2,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7irfd8/",
      "parent_id": "t1_m7iqgkz",
      "depth": 2,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-16T13:28:40"
    },
    {
      "id": "m7s90b8",
      "author": "Immudzen",
      "body": "You can have the classifier give two outputs which reduces to 22 and 1000. You can one hot encode so you have a total output length of 1022. \n\nI would use a cross entropy loss on each one of the outputs and if your weights are unbalanced you can also apply weights to deal with that. \n\nIf you really need to do a full width of 22,000 that should still work with this approach but it will degrade the quality. Your structure is still a basic multilayer perceptron with a few layers to it. The exact  number of layers and width you will need to optimize but there are many tools for that. \n\nIt is also important that it is truly a classification task. Are your 1000 classes truly distinct from each other? Don't do something like take a continuous variable and split it into 1000 bins.\n\n  \nLet me know if you have more questions.",
      "body_html": "<div class=\"md\"><p>You can have the classifier give two outputs which reduces to 22 and 1000. You can one hot encode so you have a total output length of 1022. </p>\n\n<p>I would use a cross entropy loss on each one of the outputs and if your weights are unbalanced you can also apply weights to deal with that. </p>\n\n<p>If you really need to do a full width of 22,000 that should still work with this approach but it will degrade the quality. Your structure is still a basic multilayer perceptron with a few layers to it. The exact  number of layers and width you will need to optimize but there are many tools for that. </p>\n\n<p>It is also important that it is truly a classification task. Are your 1000 classes truly distinct from each other? Don&#39;t do something like take a continuous variable and split it into 1000 bins.</p>\n\n<p>Let me know if you have more questions.</p>\n</div>",
      "created_utc": 1737197890.0,
      "score": 1,
      "ups": 1,
      "downs": 0,
      "permalink": "/r/MLQuestions/comments/1i2zcqf/classifier_with_22000_classes/m7s90b8/",
      "parent_id": "t1_m7rrreh",
      "depth": 2,
      "is_submitter": false,
      "stickied": false,
      "edited": false,
      "distinguished": null,
      "timestamp": "2025-01-18T02:58:10"
    }
  ],
  "total_comments": 18,
  "fetched_at": "2025-09-13T20:47:33.390929"
}